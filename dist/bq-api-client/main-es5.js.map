{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-new-user/add-new-user.component.ts","webpack:///src/app/components/add-new-user/add-new-user.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/modal/modal.component.ts","webpack:///src/app/components/modal/modal.component.html","webpack:///src/app/components/order-list/order-list.component.ts","webpack:///src/app/components/order-list/order-list.component.html","webpack:///src/app/components/order-send/order-send.component.ts","webpack:///src/app/components/order-send/order-send.component.html","webpack:///src/app/components/products-list/products-list.component.ts","webpack:///src/app/components/products-list/products-list.component.html","webpack:///src/app/components/staff-list/staff-list.component.ts","webpack:///src/app/components/staff-list/staff-list.component.html","webpack:///src/app/components/vertical-menu/vertical-menu.component.ts","webpack:///src/app/components/vertical-menu/vertical-menu.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/guards/role.guard.ts","webpack:///src/app/pipes/filter.pipe.ts","webpack:///src/app/services/JsonApiService.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/orders/orders.service.ts","webpack:///src/app/services/products.service.ts","webpack:///src/app/views/admin/admin.component.ts","webpack:///src/app/views/admin/admin.component.html","webpack:///src/app/views/admin/view-inventary/view-inventary.component.ts","webpack:///src/app/views/admin/view-inventary/view-inventary.component.html","webpack:///src/app/views/admin/view-staff/view-staff.component.ts","webpack:///src/app/views/admin/view-staff/view-staff.component.html","webpack:///src/app/views/waiter/view-orders/view-orders.component.ts","webpack:///src/app/views/waiter/view-orders/view-orders.component.html","webpack:///src/app/views/waiter/view-states/view-states.component.ts","webpack:///src/app/views/waiter/view-states/view-states.component.html","webpack:///src/app/views/waiter/waiter.component.ts","webpack:///src/app/views/waiter/waiter.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","children","data","expectedRole","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","confirmButtonType","register","enabled","production","declarations","schemas","providers","bootstrap","AddNewUserComponent","formBuilder","json","errorMessage","buildForm","addForm","group","email","required","password","get","valid","value","newUser","postUser","subscribe","reset","err","status","markAllAsTouched","addUser","HeaderComponent","LoginComponent","router","auth$","auth","form","mail","getToken","resp","tok","body","token","getUser","role","roles","admin","authUser","_id","localStorage","setItem","JSON","stringify","undefined","navigate","removeItem","console","log","unsubscribe","ModalComponent","fb","show","customClass","closeCallback","crearForm","editForm","user","putUser","contactOriginal","valor","patchValue","onGuardar","OrderListComponent","orders$","showMoveButton","showCancelButton","orderSuscription","getListOrders","orders","refresh$","getOrders","showHideButtons","url","statusOrder","order","arrayProducts","products","map","product","productsProduct","productId","qty","orderEdit","userId","client","orderUpdateSuscription","updateOrder","orderDeleteSuscription","deleteOrder","OrderSendComponent","confirmation","parse","getItem","orderSendSuscription","listenAddProduct","buttonAddClickEventTrack","event","objProd","getObjectOrderProduct","exist","some","item","push","totalBill","filter","obj","qtyActual","index","findIndex","splice","orderTotal","postOrder","createOrderFood","cleanList","total","reduce","acc","price","sendOrder","ProductsListComponent","product$","order$","route","editar","popoverTitle","popoverMessage","showModal","showAddButton","filterProd","buttons","productsSuscription","snapshot","routeConfig","getProducts","productOrder","sendObjProd","next","setObjectOrderProduct","getListProducts","deleteProduct","dat","prod","emit","type","filterType","StaffList","toggleModal","confirmClicked","cancelClicked","findEmployer","employer","users","deleteUser","response","refreshList$","receiveUsers","cont","contactoeditar","VerticalMenuComponent","menuAdmin","icon","href","desactivado","events","pipe","currentUrl","Object","values","clear","window","location","reload","onLogout","AuthGuard","state","userObject","providedIn","RoleGuard","filterPipe","arg","result","name","JsonApiService","http","apiUrl","_refreshList$","asObservable","headers","Authorization","handleError","put","observe","post","errorRes","error","ErrorEvent","message","statusText","AuthService","userSubject","OrdersService","subjectSource","countdown$","objectOrderProduct","ProductsService","AdminComponent","ViewInventaryComponent","editProp","prodEditar","productImg","image","dateEntry","postProduct","newProduct","updateProduct","addProduct","ViewStaffComponent","ViewOrdersComponent","ViewStatesComponent","statusPending","statusDelivering","statusDelivered","WaiterComponent","environment","bootstrapModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAcA,QAAMC,MAAM,GAAW,CAErB;AAACC,UAAI,EAAC,EAAN;AAAUC,eAAS,EAAC;AAApB,KAFqB,EAGrB;AACED,UAAI,EAAE,OADR;AACiBC,eAAS,EAAE,+EAD5B;AAC4CC,iBAAW,EAAE,CAAC,4DAAD,CADzD;AAEEC,cAAQ,EAAE,CACR;AAAEH,YAAI,EAAE,EAAR;AAAYC,iBAAS,EAAE,+FAAvB;AAA2CC,mBAAW,EAAE,CAAC,6DAAD,CAAxD;AAAqEE,YAAI,EAAE;AAAEC,sBAAY,EAAE;AAAhB;AAA3E,OADQ,EAER;AAAEL,YAAI,EAAE,OAAR;AAAiBC,iBAAS,EAAE,+FAA5B;AAAgDC,mBAAW,EAAE,CAAC,6DAAD,CAA7D;AAA0EE,YAAI,EAAE;AAAEC,sBAAY,EAAE;AAAhB;AAAhF,OAFQ,EAGR;AAAEL,YAAI,EAAE,YAAR;AAAsBC,iBAAS,EAAE,2GAAjC;AAAyDC,mBAAW,EAAE,CAAC,6DAAD,CAAtE;AAAmFE,YAAI,EAAE;AAAEC,sBAAY,EAAE;AAAhB;AAAzF,OAHQ;AAFZ,KAHqB,EAWrB;AAAEL,UAAI,EAAE,QAAR;AAAkBC,eAAS,EAAG,8EAA9B;AAA+CC,iBAAW,EAAE,CAAC,4DAAD,CAA5D;AACAC,cAAQ,EAAE,CACR;AAAEH,YAAI,EAAE,EAAR;AAAYC,iBAAS,EAAE;AAAvB,OADQ,EAER;AAAED,YAAI,EAAE,QAAR;AAAkBC,iBAAS,EAAE;AAA7B,OAFQ,EAGR;AAAED,YAAI,EAAE,QAAR;AAAkBC,iBAAS,EAAC;AAA5B,OAHQ;AADV,KAXqB,CAAvB;;QAyBaK,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBR,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBO,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBR,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACvC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,sE,CACA;AAMA;;;QACaY,Y,GANb;AAAA;;AAOE,WAAAC,KAAA,GAAQ,QAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,0E;AAAA;AAAA;ACPzB;;AACE;;AACA;;AACA;;AACA;;AACE;;AACE;;AACJ;;AAEF;;;;;;;;;sEDFaA,Y,EAAY;cANxB,uDAMwB;eANd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAMc,Q;;;;;;;;;;;;;;;;;;AERzsEaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,gFAAD,EAAiB,8EAAjB,EAA+B,2EAA/B,C;AAA+C,gBAfjD,CACP,6DADO,EAEP,uEAFO,EAGP,oEAHO,EAIP,sEAJO,EAKP,mEALO,EAMP,2DANO,EAOP;AACA,6FAA0BP,OAA1B,CAAkC;AAChCQ,yBAAiB,EAAE;AADa,OAAlC,CARO,EAWP,6EAAoBC,QAApB,CAA6B,gBAA7B,EAA+C;AAAEC,eAAO,EAAE,uEAAYC;AAAvB,OAA/C,CAXO,CAeiD;;;;0HAG/CJ,S,EAAS;AAAA,uBApClB,2DAoCkB,EAnClB,mFAmCkB,EAlClB,uGAkCkB,EAjClB,2EAiCkB,EAhClB,qFAgCkB,EA/BlB,2GA+BkB,EA9BlB,gGA8BkB,EA7BlB,iFA6BkB,EA5BlB,oGA4BkB,EA3BlB,+FA2BkB,EA1BlB,wGA0BkB,EAzBlB,8DAyBkB,EAxBlB,+EAwBkB,EAvBlB,oGAuBkB,EAtBlB,oGAsBkB,EArBlB,+FAqBkB,EApBlB,iFAoBkB;AApBJ,kBAGd,6DAHc,EAId,uEAJc,EAKd,oEALc,EAMd,sEANc,EAOd,mEAPc,EAQd,2DARc,EAQH,sFARG,EAQH,4EARG;AAoBI,O;AAZP,K;;;;;sEAYFA,S,EAAS;cAtCrB,sDAsCqB;eAtCZ;AACRK,sBAAY,EAAE,CACZ,2DADY,EAEZ,mFAFY,EAGZ,uGAHY,EAIZ,2EAJY,EAKZ,qFALY,EAMZ,2GANY,EAOZ,gGAPY,EAQZ,iFARY,EASZ,oGATY,EAUZ,+FAVY,EAWZ,wGAXY,EAYZ,8DAZY,EAaZ,+EAbY,EAcZ,oGAdY,EAeZ,oGAfY,EAgBZ,+FAhBY,EAiBZ,iFAjBY,CADN;AAoBRX,iBAAO,EAAE,CACP,6DADO,EAEP,uEAFO,EAGP,oEAHO,EAIP,sEAJO,EAKP,mEALO,EAMP,2DANO,EAOP;AACA,iGAA0BD,OAA1B,CAAkC;AAChCQ,6BAAiB,EAAE;AADa,WAAlC,CARO,EAWP,6EAAoBC,QAApB,CAA6B,gBAA7B,EAA+C;AAAEC,mBAAO,EAAE,uEAAYC;AAAvB,WAA/C,CAXO,CApBD;AAiCV;AACEE,iBAAO,EAAE,CAAE,oEAAF,CAlCD;AAmCRC,mBAAS,EAAE,CAAC,gFAAD,EAAiB,8EAAjB,EAA+B,2EAA/B,CAnCH;AAoCRC,mBAAS,EAAE,CAAC,2DAAD;AApCH,S;AAsCY,Q;;;;;;;;;;;;;;;;;;ACtEtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACUgB;;AACI;;AACJ;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHO;;AAAA;;;;;;AAKH;;AACI;;AACJ;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHO;;AAAA;;;;QDNNC,mB;AAKX,mCAAoBC,WAApB,EAAsDC,IAAtD,EAA4E;AAAA;;AAAxD,aAAAD,WAAA,GAAAA,WAAA;AAAkC,aAAAC,IAAA,GAAAA,IAAA;AAFtD,aAAAC,YAAA,GAAuB,SAAvB;AAGE,aAAKC,SAAL;AACD;;;;mCAEO,CAEP;;;oCACW;AACV,eAAKC,OAAL,GAAe,KAAKJ,WAAL,CAAiBK,KAAjB,CAAuB;AACpCC,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWD,KAAjC,CAAL,CAD6B;AAEpCE,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWD,QAAZ,CAAL;AAF0B,WAAvB,CAAf;AAID;;;mCAEU;AACT,iBAAO,KAAKH,OAAL,CAAaK,GAAb,CAAiB,OAAjB,CAAP;AACD;;;sCAEa;AACZ,iBAAO,KAAKL,OAAL,CAAaK,GAAb,CAAiB,UAAjB,CAAP;AACD,S,CAGD;;;;kCACU;AAAA;;AACR,cAAI,KAAKL,OAAL,CAAaM,KAAjB,EAAwB;AACtB,gBAAMC,KAAK,GAAG,KAAKP,OAAL,CAAaO,KAA3B;AACA,gBAAMC,OAAO,GAAW;AACtB,uBAASD,KAAK,CAACL,KADO;AACA,uBAAS;AAAE,yBAAS;AAAX,eADT;AAC6B,0BAAYK,KAAK,CAACH;AAD/C,aAAxB;AAGA,iBAAKP,IAAL,CAAUY,QAAV,CAAmBD,OAAnB,EAA4BE,SAA5B,CAAsC,UAAClC,IAAD,EAAe;AACnD,mBAAI,CAACwB,OAAL,CAAaW,KAAb;AACD,aAFD,EAGE,UAAAC,GAAG,EAAI;AACL,sBAAQA,GAAG,CAACC,MAAZ;AACE,qBAAK,GAAL;AACE,uBAAI,CAACf,YAAL,GAAoB,gEAApB;AACA;;AACF,qBAAK,GAAL;AACE,uBAAI,CAACA,YAAL,GAAoB,kCAApB;AACA;;AACF,qBAAK,GAAL;AACE,uBAAI,CAACA,YAAL,GAAoB,mCAApB;AACA;;AACF;AACE,uBAAI,CAACA,YAAL,GAAoB,uCAApB;AACA;AAZJ;AAeD,aAnBH;AAoBD,WAzBD,MAyBO;AACL,iBAAKE,OAAL,CAAac,gBAAb;AACD;AACF;;;;;;;uBA1DUnB,mB,EAAmB,2H,EAAA,uJ;AAAA,K;;;YAAnBA,mB;AAAmB,uC;AAAA,e;AAAA,a;AAAA,kX;AAAA;AAAA;ACThC;;AAAI;;AAAgB;;AACpB;;AACG;;AACK;;AACI;;AACA;;AAEJ;;AACA;;AACI;;AAKA;;AAMJ;;AACL;;AAEC;;AAAsB;AAAA,mBAAS,IAAAoB,OAAA,EAAT;AAAkB,WAAlB;;AAAqB;;AAAO;;AAClD;;AAAsB;AAAA,mBAAS,IAAAf,OAAA,QAAT;AAAwB,WAAxB;;AAA0B;;AAAQ;;AAC5D;;;;AAxB2B;;AAAA;;AAQV;;AAAA;;AAKA;;AAAA;;;;;;;;;sEDLJL,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTZ,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEThC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa+B,e;AAEX,iCAAc;AAAA;AACb;;;;mCAEO,CACP;;;;;;;uBANUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,mC;AAAA;AAAA;ACR5B;;AACE;;AACI;;AAAI;;AAAa;;AACrB;;AAIF;;;;;;;;sEDCaA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTjC,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AER5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmBsB;;AACI;;AACJ;;;;;;AACA;;AACE;;AAEJ;;;;;;AAPF;;AACI;;AAGA;;AAIJ;;;;;;AAPO;;AAAA;;AAGA;;AAAA;;;;;;AAMH;;AACI;;AACJ;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHO;;AAAA;;;;;;AAIP;;AACQ;;AACI;;AACJ;;AACJ;;;;;;AAFQ;;AAAA;;;;QDtBjBgC,c;AAIX,8BAAoBC,MAApB,EAA2CC,KAA3C,EAA+D;AAAA;;AAA3C,aAAAD,MAAA,GAAAA,MAAA;AAAuB,aAAAC,KAAA,GAAAA,KAAA;AAH3C,aAAArB,YAAA,GAAqB,IAArB;AAEC,aAAAsB,IAAA,GAAqB,IAArB;AAGD,aAAAC,IAAA,GAAO,IAAI,wDAAJ,CAAc;AACnBnB,eAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWD,KAAjC,CAApB,CADY;AAEnBE,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWD,QAAZ,CAApB;AAFS,SAAd,CAAP;AAFiE;;;;mCAOzD,CAEP;;;mCACU;AACT,iBAAO,KAAKkB,IAAL,CAAUhB,GAAV,CAAc,OAAd,CAAP;AACD;;;sCAEa;AACZ,iBAAO,KAAKgB,IAAL,CAAUhB,GAAV,CAAc,UAAd,CAAP;AACD;;;mCAEO;AAAA;;AACN,cAAMiB,IAAI,GAAG,KAAKD,IAAL,CAAUd,KAAV,CAAgBL,KAA7B;;AACA,cAAI,KAAKmB,IAAL,CAAUf,KAAd,EAAqB;AACnB,iBAAKc,IAAL,GAAY,KAAKD,KAAL,CAAWI,QAAX,CAAoB,KAAKF,IAAL,CAAUd,KAA9B,EAAqCG,SAArC,CAA+C,UAACc,IAAD,EAAU;AACnE,kBAAIA,IAAI,CAACX,MAAL,IAAe,GAAnB,EAAwB;AACtB,sBAAI,CAACY,GAAL,GAAWD,IAAI,CAACE,IAAL,CAAUC,KAArB;;AAEE,sBAAI,CAACR,KAAL,CAAWS,OAAX,CAAmBN,IAAnB,EAAyB,MAAI,CAACG,GAA9B,EAAmCf,SAAnC,CAA6C,UAACc,IAAD,EAAU;AACrD,sBAAMK,IAAI,GAAGL,IAAI,CAACM,KAAL,CAAWC,KAAxB;AACA,sBAAMC,QAAQ,GAAG;AACf,6BAAS,MAAI,CAACP,GADC;AAEf,6BAASD,IAAI,CAACtB,KAFC;AAGf,4BAAQ2B,IAHO;AAIf,0BAAML,IAAI,CAACS;AAJI,mBAAjB;AAMAC,8BAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeL,QAAf,CAAhC;;AACA,sBAAIR,IAAI,IAAIc,SAAZ,EAAuB;AACrBT,wBAAI,GAAG,MAAI,CAACX,MAAL,CAAYqB,QAAZ,CAAqB,CAAC,QAAD,CAArB,CAAH,GAAsC,MAAI,CAACrB,MAAL,CAAYqB,QAAZ,CAAqB,CAAC,SAAD,CAArB,CAA1C;AACD,mBAFD,MAEO;AACLL,gCAAY,CAACM,UAAb,CAAwB,SAAxB;AACA,0BAAI,CAAC1C,YAAL,GAAmB,wBAAnB;AACD;AACF,iBAfD;AAqBH;AACF,aA1BW,EA0BT,UAAAc,GAAG,EAAI;AACR,kBAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAuB;AACrB,uBAAO,MAAI,CAACf,YAAL,GAAoB,6BAA3B;AACD;;AACD2C,qBAAO,CAACC,GAAR,CAAY,GAAZ,EAAgB9B,GAAhB;AACA,qBAAO,MAAI,CAACd,YAAL,GAAoB,wBAA3B;AACD,aAhCW,CAAZ;AAkCD,WAnCD,MAmCK;AAEH,iBAAKuB,IAAL,CAAUP,gBAAV;AACD;AACF;;;sCAEU;AACT,eAAKM,IAAL,CAAUuB,WAAV;AACD;;;;;;;uBAnEU1B,c,EAAc,uH,EAAA,mI;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,2a;AAAA;AAAA;ACX3B;;AACE;;AACI;;AAAI;;AAAc;;AACd;;AAEY;;AAAmB;;AAAK;;AAC5B;;AACI;;AACJ;;AAGI;;AAAsB;;AAAQ;;AAC7B;;AACD;;AACJ;;AAEJ;;AACI;;AASA;;AAKA;;AAKJ;;AACD;;AACK;;AAAkC;AAAA,mBAAS,IAAAe,QAAA,EAAT;AAAmB,WAAnB;;AAAqB;;AAAQ;;AACpE;;AACH;;AACR;;AACA;;;;AAvCc;;AAAA;;AAcO;;AAAA;;AASA;;AAAA;;AAKA;;AAAA;;;;;;;;;sEDpBVf,c,EAAc;cAN1B,uDAM0B;eANhB;AACTlC,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAMgB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEZ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;OAGA;AACA;;;QAOa2D,c;AAmBX,8BAAoB/C,IAApB,EAAkDgD,EAAlD,EAAiE;AAAA;;AAA7C,aAAAhD,IAAA,GAAAA,IAAA;AAA8B,aAAAgD,EAAA,GAAAA,EAAA;AAlBzC,aAAAC,IAAA,GAAO,KAAP;AACA,aAAAC,WAAA,GAAc,EAAd;;AACA,aAAAC,aAAA,GAAgB;AAAA,iBAAO,KAAP;AAAA,SAAhB;;AAiBP,aAAKC,SAAL;AACD;;;;mCAEU,CACV;;;oCACW;AACV,eAAKC,QAAL,GAAgB,KAAKL,EAAL,CAAQ5C,KAAR,CAAc;AAC5BC,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWD,KAAjC,CAAL,CADqB;AAE5BE,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWD,QAAZ,CAAL;AAFkB,WAAd,CAAhB;AAID;;;oCACW;AACV,cAAMgD,IAAI,GAAG;AACX,qBAAS,KAAKD,QAAL,CAAc3C,KAAd,CAAoBL,KADlB;AAEX,wBAAY,KAAKgD,QAAL,CAAc3C,KAAd,CAAoBH,QAFrB;AAGX,qBAAS;AACP,uBAAS;AADF;AAHE,WAAb;;AAQA,cAAG,KAAK8C,QAAL,CAAc5C,KAAjB,EAAuB;AACrB,iBAAKT,IAAL,CAAUuD,OAAV,CAAkBD,IAAlB,EAAwB,KAAKE,eAAL,CAAqBnD,KAA7C,EAAoDQ,SAApD;AACD;AAEF;;;0BAvCqB4C,K,EAAO;AAC3B,eAAKL,SAAL;;AACA,cAAIK,KAAJ,EAAW;AACT,iBAAKD,eAAL,GAAuBC,KAAvB;AACA,iBAAKJ,QAAL,CAAcK,UAAd,CAAyB;AACvBrD,mBAAK,EAAEoD,KAAK,CAACpD,KADU;AAEvBE,sBAAQ,EAAE;AAFa,aAAzB;AAID;AACF;;;;;;;uBAdUwC,c,EAAc,uJ,EAAA,2H;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,4gB;AAAA;AAAA;;;ACX3B;;AACE;;AAAqB;AAAA,mBAAS,IAAAI,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;AAC/C;;AACA;;AACI;;AACE;;AACF;;AACA;;AAAI;;AAAc;;AAClB;;AAA0C;AAAA,mBAAY,IAAAQ,SAAA,EAAZ;AAAuB,WAAvB;;AACtC;;AACA;;AACF;;AACE;;AAAqC;AAAA;;AAAA;;AAAA,+BAAqB,EAArB;AAAuB,WAAvB,EAAwB,OAAxB,EAAwB;AAAA,mBAAU,IAAAR,aAAA,EAAV;AAAyB,WAAjD;;AAAmD;;AAAQ;;AAChG;;AAAmC;AAAA;;AAAA;;AAAA,+BAAqB,EAArB;AAAuB,WAAvB,EAAwB,OAAxB,EAAwB;AAAA,mBAAU,IAAAA,aAAA,EAAV;AAAyB,WAAjD;;AAAmD;;AAAO;;AAC/F;;AACF;;AACJ;;AAGA;;AAEF;;;;AArBM,qGAA6B,SAA7B,EAA6B,kGAA7B;;AAQmB;;AAAA;;;;;;;;;sEDGZJ,c,EAAc;cAL1B,uDAK0B;eALhB;AACT7D,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;;;;;gBACxB;;;gBACA;;;gBACA;;;gBAEA;;;;;;;;;;;;;;;;;;;;AEhBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACUM;;AACE;;AAAmB;;AAAwB;;AAC3C;;AAAkB;;AAAe;;AACjC;;AAAoB;;AAAyB;;AAC/C;;;;;;AAHqB;;AAAA;;AACD;;AAAA;;AACE;;AAAA;;;;;;;;AAEtB;;AAA4C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAA0C;;AAAY;;;;;;;;AAChI;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAA4C;;AAAe;;;;;;AAd1I;;AACE;;AACE;;AACE;;AAAqB;;AAAgB;;AACrC;;AAAmB;;AAA4B;;AAAK;;AACtD;;AAEF;;AACA;;AAKA;;AACA;;AACF;;;;;;;;AAZ2B;;AAAA;;AAKH;;AAAA;;AAKD;;AAAA;;AACE;;AAAA;;;;QDLhBwE,kB;AAaX,kCAAoBC,OAApB,EAAmDxC,MAAnD,EAAmE;AAAA;;AAA/C,aAAAwC,OAAA,GAAAA,OAAA;AAA+B,aAAAxC,MAAA,GAAAA,MAAA;AAXnD,aAAAyC,cAAA,GAA0B,KAA1B;AACA,aAAAC,gBAAA,GAA4B,KAA5B;AAUsE;;;;oCAE1D;AAAA;;AACX,eAAKC,gBAAL,GAAuB,KAAKH,OAAL,CAAaI,aAAb,GAA6BpD,SAA7B,CAAuC,UAAClC,IAAD,EAAiB;AAC7E,kBAAI,CAACuF,MAAL,GAAcvF,IAAd;AACA,WAFqB,CAAvB;AAGA;;;mCAEO;AAAA;;AACN,eAAKkF,OAAL,CAAaM,QAAb,CAAsBtD,SAAtB,CAAgC,YAAM;AACpC,kBAAI,CAACuD,SAAL;AACD,WAFD;AAGA,eAAKA,SAAL;AACA,eAAKC,eAAL;AACD;;;0CAEc;AACb,eAAKP,cAAL,GAAsB,KAAKzC,MAAL,CAAYiD,GAAZ,IAAmB,gBAAnB,KAAwC,KAAKC,WAAL,IAAoB,SAApB,IAAgC,KAAKA,WAAL,IAAoB,YAA5F,CAAtB;AACA,eAAKR,gBAAL,GAAwB,KAAK1C,MAAL,CAAYiD,GAAZ,IAAmB,gBAAnB,IAAuC,KAAKC,WAAL,IAAoB,SAAnF;AACD;;;qCAEYC,K,EAAa;AAAA;;AACxB,eAAKC,aAAL,GAAqBD,KAAK,CAACE,QAAN,CAAeC,GAAf,CAAmB,UAAAC,OAAO,EAAI;AACjD,kBAAI,CAACC,eAAL,GAAuB;AACrBC,uBAAS,EAAGF,OAAO,CAACA,OAAR,CAAgBxC,GADP;AAErB2C,iBAAG,EAAEH,OAAO,CAACG;AAFQ,aAAvB;AAIA,mBAAO,MAAI,CAACF,eAAZ;AACD,WANoB,CAArB;;AAQA,cAAIL,KAAK,CAACxD,MAAN,IAAgB,SAApB,EAA+B;AAC7BwD,iBAAK,CAACxD,MAAN,GAAe,YAAf;AACD,WAFD,MAEO,IAAIwD,KAAK,CAACxD,MAAN,IAAgB,YAApB,EAAkC;AACvCwD,iBAAK,CAACxD,MAAN,GAAe,WAAf;AACD;;AACD,eAAKgE,SAAL,GAAiB;AACfC,kBAAM,EAAET,KAAK,CAACS,MADC;AAEfC,kBAAM,EAAEV,KAAK,CAACU,MAFC;AAGfR,oBAAQ,EAAE,KAAKD,aAHA;AAIfzD,kBAAM,EAAEwD,KAAK,CAACxD;AAJC,WAAjB;AAOA,eAAKmE,sBAAL,GAA+B,KAAKtB,OAAL,CAAauB,WAAb,CAAyB,KAAKJ,SAA9B,EAAyCR,KAAK,CAACpC,GAA/C,EAAoDvB,SAApD,EAA/B;AAGA,eAAKmE,SAAL,GAAiB;AACfC,kBAAM,EAAET,KAAK,CAACS,MADC;AAEfC,kBAAM,EAAEV,KAAK,CAACU,MAFC;AAGfR,oBAAQ,EAAE,KAAKD,aAHA;AAIfzD,kBAAM,EAAEwD,KAAK,CAACxD;AAJC,WAAjB;AAOA,eAAKmE,sBAAL,GAA+B,KAAKtB,OAAL,CAAauB,WAAb,CAAyB,KAAKJ,SAA9B,EAAyCR,KAAK,CAACpC,GAA/C,EAAoDvB,SAApD,EAA/B;AACD;;;oCAEW2D,K,EAAc;AACxB,eAAKa,sBAAL,GAA6B,KAAKxB,OAAL,CAAayB,WAAb,CAAyBd,KAAK,CAACpC,GAA/B,EAAoCvB,SAApC,EAA7B;AACD;;;sCAEU;AACT,eAAKmD,gBAAL,CAAsBlB,WAAtB;AAEC,eAAKqC,sBAAN,GAA8B,KAAKA,sBAAL,CAA4BrC,WAA5B,EAA9B,GAAwE,IAAxE;AACC,eAAKuC,sBAAN,GAA8B,KAAKA,sBAAL,CAA4BvC,WAA5B,EAA9B,GAAwE,IAAxE;AACD;;;;;;;uBA7EUc,kB,EAAkB,8I,EAAA,uH;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,ygB;AAAA;AAAA;ACX/B;;AACE;;AACE;;;;AAgBF;;AAGF;;;;AAnB4B;;AAAA;;;;;;;;;;sEDSfA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT1E,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKoB,Q;;;;;;;;gBAI7B;;;;;;;;;;;;;;;;;;;;AEfF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACMU;;AAAwB;;AAAM;;AAAqB;;AAAO;;;;;;;;AAK5D;;AACI;;AACI;;AAAI;;AAAgB;;AACpB;;AACE;;AAAI;;AAAG;;AAAM;;AAAiB;;AAAO;;AACrC;;AAAgB;;AAAE;;AAAM;;AAAe;;AAAO;;AAChD;;AACJ;;AACA;;AACI;;AAA8B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AACzD;;AAA+B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAC/D;;AACA;;AACI;;AAAI;;AAAG;;AAAM;;AAA+B;;AAAO;;AACvD;;AACA;;AAA4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAC1D;;;;;;AAdU;;AAAA;;AAEW;;AAAA;;AACW;;AAAA;;AAQb;;AAAA;;;;QDdhBmG,kB;AAcX,kCAAoB1B,OAApB,EAA6C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AAbpB,aAAAa,QAAA,GAAW,EAAX;AAGA,aAAAc,YAAA,GAAwB,KAAxB;AACO,aAAAlC,IAAA,GAAYf,IAAI,CAACkD,KAAL,CAAWpD,YAAY,CAACqD,OAAb,CAAsB,SAAtB,CAAX,CAAZ;AAMP,aAAA1B,gBAAA,GAA+B,IAA/B;AACA,aAAA2B,oBAAA,GAAmC,IAAnC;AAEgD;;;;mCAExC;AACN,eAAKC,gBAAL;AACA,eAAK1F,SAAL;AACD;;;2CAEkB;AAAA;;AACjB,eAAK8D,gBAAL,GAAwB,KAAKH,OAAL,CAAagC,wBAAb,CAAsChF,SAAtC,CAAgD,UAAAiF,KAAK,EAAI;AAC/E,kBAAI,CAACC,OAAL,GAAe,MAAI,CAAClC,OAAL,CAAamC,qBAAb,EAAf;;AACA,gBAAIC,KAAK,GAAG,MAAI,CAACvB,QAAL,CAAcwB,IAAd,CAAmB,UAAAC,IAAI;AAAA,qBAAIA,IAAI,CAAC/D,GAAL,IAAY,MAAI,CAAC2D,OAAL,CAAa3D,GAA7B;AAAA,aAAvB,CAAZ;;AACA,gBAAI,CAAC6D,KAAL,EAAY;AACV,oBAAI,CAACF,OAAL,CAAahB,GAAb,GAAmB,CAAnB;;AACA,oBAAI,CAACL,QAAL,CAAc0B,IAAd,CAAmB,MAAI,CAACL,OAAxB;;AACA,oBAAI,CAACM,SAAL;AACD;AACF,WARuB,CAAxB;AASD;;;6BAEIhI,E,EAAY;AACf,eAAKqG,QAAL,CAAc4B,MAAd,CAAqB,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAAClI,EAAJ,IAAUA,EAAd;AAAA,WAAxB,EAA0C,CAA1C,EAA6C0G,GAA7C,IAAoD,CAApD;AACA,eAAKsB,SAAL;AACD;;;8BAEMhI,E,EAAY;AACjB,cAAMmI,SAAS,GAAG,KAAK9B,QAAL,CAAc4B,MAAd,CAAqB,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAAClI,EAAJ,IAAUA,EAAd;AAAA,WAAxB,EAA0C,CAA1C,EAA6C0G,GAA/D;;AACA,cAAGyB,SAAS,GAAG,CAAf,EAAkB;AAChB,iBAAK9B,QAAL,CAAc4B,MAAd,CAAqB,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAAClI,EAAJ,IAAUA,EAAd;AAAA,aAAxB,EAA0C,CAA1C,EAA6C0G,GAA7C,IAAoD,CAApD;AACD;;AACD,eAAKsB,SAAL;AACD;;;oCAEmB;AAClB,eAAK7E,IAAL,GAAY,IAAI,wDAAJ,CAAc;AACxB0D,kBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW5E,QAAZ,CAApB;AADgB,WAAd,CAAZ;AAGD;;;oCAEW;AACV,iBAAO,KAAKkB,IAAL,CAAUhB,GAAV,CAAc,QAAd,CAAP;AACD;;;8BAEKnC,E,EAAY;AAChB,cAAMoI,KAAK,GAAG,KAAK/B,QAAL,CAAcgC,SAAd,CAAwB,UAAAP,IAAI;AAAA,mBAAIA,IAAI,CAAC9H,EAAL,IAAWA,EAAf;AAAA,WAA5B,CAAd;AACA,eAAKqG,QAAL,CAAciC,MAAd,CAAqBF,KAArB,EAA4B,CAA5B;AACA,eAAKJ,SAAL;AACD;;;0CAEiB;AAAA;;AAChB,eAAK5B,aAAL,GAAqB,KAAKC,QAAL,CAAcC,GAAd,CAAkB,UAAAC,OAAO,EAAI;AAChD,kBAAI,CAACC,eAAL,GAAuB;AACrBC,uBAAS,EAAGF,OAAO,CAACxC,GADC;AAErB2C,iBAAG,EAAEH,OAAO,CAACG;AAFQ,aAAvB;AAIA,mBAAO,MAAI,CAACF,eAAZ;AACD,WANoB,CAArB;AAQA,eAAK+B,UAAL,GAAkB;AAChB3B,kBAAM,EAAE,KAAK3B,IAAL,CAAUjF,EADF;AAEhB6G,kBAAM,EAAE,KAAK1D,IAAL,CAAUd,KAAV,CAAgBwE,MAFR;AAGhBR,oBAAQ,EAAE,KAAKD;AAHC,WAAlB;AAMA,iBAAO,KAAKmC,UAAZ;AACD;;;oCAEW;AAAA;;AACV,cAAG,KAAKpF,IAAL,CAAUf,KAAb,EAAoB;AAClB,iBAAKkF,oBAAL,GAA4B,KAAK9B,OAAL,CAAagD,SAAb,CAAuB,KAAKC,eAAL,EAAvB,EAA+CjG,SAA/C,CAAyD,UAAClC,IAAD,EAAe;AACpG,oBAAI,CAAC6C,IAAL,CAAUV,KAAV;;AACA,oBAAI,CAAC0E,YAAL,GAAoB,KAApB;;AACA,oBAAI,CAACuB,SAAL;AACD,aAJ6B,CAA5B;AAKD,WAND,MAMO;AACL,iBAAKvB,YAAL,GAAoB,IAApB;AACD;AACF;;;oCAEW;AACV,eAAKwB,KAAL,GAAa,CAAb;AACA,eAAKtC,QAAL,GAAgB,EAAhB;AACD;;;oCAEW;AACV,eAAKsC,KAAL,GAAa,KAAKtC,QAAL,CAAcuC,MAAd,CAAqB,UAACC,GAAD,EAAMX,GAAN;AAAA,mBAAcW,GAAG,GAAIX,GAAG,CAACY,KAAJ,GAAYZ,GAAG,CAACxB,GAArC;AAAA,WAArB,EAAgE,CAAhE,CAAb;AACD;;;sCAEU;AACT,eAAKf,gBAAL,CAAsBlB,WAAtB;;AACA,cAAI,KAAK6C,oBAAT,EAA8B;AAC5B,iBAAKA,oBAAL,CAA0B7C,WAA1B;AACA;AACH;;;;;;;uBA1GUyC,kB,EAAkB,8I;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,e;AAAA,a;AAAA,sjB;AAAA;AAAA;ACV/B;;AACE;;AACI;;AACE;;AAAI;;AAAO;;AACX;;AACE;;AACA;;AACF;;AACF;;AACJ;;AACE;;AACI;;AAiBJ;;AACA;;AACI;;AACI;;AAAI;;AAAK;;AACT;;AAAI;;AAAE;;AAAM;;AAAS;;AAAO;;AAChC;;AACA;;AACI;;AAA6B;AAAA,mBAAS,IAAA6B,SAAA,EAAT;AAAoB,WAApB;;AAAsB;;AAAO;;AAC1D;;AAAuB;AAAA,mBAAS,IAAAL,SAAA,EAAT;AAAoB,WAApB;;AAAsB;;AAAQ;;AACzD;;AACJ;;AACJ;;;;AArC6B;;AAAA;;AAIhB;;AAAA;;AAKmB;;AAAA;;AAqBR;;AAAA;;;;;;;;;sEDtBXxB,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTrG,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;AEV/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACUO;;AACI;;AAEA;AAAA;;AAAA;;AAAA,mCAAoB,YAApB;AAAgC,SAAhC;;AAAmC;;AAAY;;AAC/C;;AAEA;AAAA;;AAAA;;AAAA,mCAAoB,eAApB;AAAmC,SAAnC;;AAAsC;;AAAe;;AACrD;;AAEA;AAAA;;AAAA;;AAAA,mCAAoB,OAApB;AAA2B,SAA3B;;AAA8B;;AAAU;;AAC5C;;;;;;;;AAII;;AAAoD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;;;;;;;AAQ9E;;AACI;;AAAoB;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAA2B,OAA3B,EAA2B;AAAA;;AAAA;;AAAA,oCAAmB,IAAnB;AAAuB,SAAlD;;AAChB;;AAAyC;;AAC7C;;AAEA;;AACuD;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAA6B,QAA7B,EAA6B;AAAA;;AAAA;;AAAA,yCACtD,IADsD;AAClD,SADqB;;AACG;;AAC1D;;AACJ;;;;;;AAJkD;;AAAA,sGAA6B,gBAA7B,EAA6B,qBAA7B;;;;;;AAdtD;;AACI;;AACA;;AACI;;AACJ;;AACA;;AACI;;AAAI;;AAAa;;AACjB;;AAAI;;AAAiB;;AACzB;;AACA;;AAUJ;;;;;;;;AAlBO;;AAAA;;AAEM;;AAAA;;AAGD;;AAAA;;AACA;;AAAA;;AAEiB;;AAAA;;;;QDpBvBiI,qB;AAgBX,qCAAoBC,QAApB,EAAuDC,MAAvD,EAAsFC,KAAtF,EAAqHnG,MAArH,EAAqI;AAAA;;AAAjH,aAAAiG,QAAA,GAAAA,QAAA;AAAmC,aAAAC,MAAA,GAAAA,MAAA;AAA+B,aAAAC,KAAA,GAAAA,KAAA;AAA+B,aAAAnG,MAAA,GAAAA,MAAA;AAd3G,aAAAoG,MAAA,GAAS,IAAI,0DAAJ,EAAT;AAGV,aAAAC,YAAA,GAAe,UAAf;AACA,aAAAC,cAAA,GAAiB,gCAAjB;AACA,aAAAC,SAAA,GAAY,KAAZ;AACA,aAAAC,aAAA,GAAyB,KAAzB;AACA,aAAAC,UAAA,GAAqB,WAArB;AAGA,aAAAC,OAAA,GAAmB,IAAnB;AAEA,aAAAC,mBAAA,GAAkC,IAAlC;AAGE,aAAKzJ,IAAL,GAAYiJ,KAAK,CAACS,QAAN,CAAeC,WAAf,CAA2B3J,IAAvC;AACA,aAAKwJ,OAAL,GAAgB,KAAKxJ,IAAL,KAAc,YAAf,GAA+B,IAA/B,GAAsC,KAArD;AACD;;;;mCAEO;AAAA;;AACN,eAAKyJ,mBAAL,GAA0B,KAAKV,QAAL,CAAcnD,QAAd,CAAuBtD,SAAvB,CAAiC,YAAM;AAC/D,kBAAI,CAACsH,WAAL;AACD,WAFyB,CAA1B;AAGD,eAAKA,WAAL;AACC,eAAKN,aAAL,GAAqB,KAAKxG,MAAL,CAAYiD,GAAZ,IAAmB,gBAAxC;AACD;;;kCAESM,O,EAAc;AACtB,eAAKwD,YAAL,GAAoBxD,OAApB;AACA,eAAKyD,WAAL,CAAiB,KAAKD,YAAtB;AACA,eAAKb,MAAL,CAAY1B,wBAAZ,CAAqCyC,IAArC,CAA0CxC,KAA1C;AACD;;;oCAEYlB,O,EAAiB;AAC5B,eAAK2C,MAAL,CAAYgB,qBAAZ,CAAkC3D,OAAlC;AACD;;;sCAEa;AAAA;;AACZ,eAAK0C,QAAL,CAAckB,eAAd,GAAgC3H,SAAhC,CAA0C,UAAClC,IAAD,EAAU;AAClD,mBAAI,CAAC+F,QAAL,GAAgB/F,IAAhB;AACD,WAFD;AAGD;;;oCACWiG,O,EAAS;AAAA;;AACnB,eAAK0C,QAAL,CAAcmB,aAAd,CAA4B7D,OAA5B,EAAqC/D,SAArC,CAA+C,UAAA6H,GAAG,EAAI;AACpD,mBAAI,CAAChE,QAAL,GAAgB,OAAI,CAACA,QAAL,CAAc4B,MAAd,CAAqB,UAAAqC,IAAI;AAAA,qBAAIA,IAAI,CAACvG,GAAL,IAAYwC,OAAO,CAACvG,EAAxB;AAAA,aAAzB,CAAhB;AACD,WAFD;AAGD;;;oCAEWuG,O,EAAc;AACxB,eAAK6C,MAAL,CAAYmB,IAAZ,CAAiBhE,OAAjB;AACD;;;mCAGUiE,I,EAAc;AACvB,kBAAQA,IAAR;AACE,iBAAK,WAAL;AACE,mBAAK5F,IAAL,GAAY,EAAZ;AACA,mBAAK6E,UAAL,GAAkBe,IAAlB;AACA;;AACF,iBAAK,OAAL;AACE,mBAAK5F,IAAL,GAAY,OAAZ;AACA,mBAAK6E,UAAL,GAAkB,YAAlB;AACA;;AACF;AACE,mBAAK7E,IAAL,GAAY,OAAZ;AACA,mBAAK6E,UAAL,GAAkBe,IAAlB;AACA;AAZJ;AAcD;;;sCAEU;AACT,eAAKb,mBAAL,CAAyBlF,WAAzB;AACD;;;;;;;uBA1EUuE,qB,EAAqB,2I,EAAA,8I,EAAA,+H,EAAA,uH;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,0rB;AAAA;AAAA;ACZlC;;AACE;;AACK;;AACI;;AAEA;AAAA,mBAAS,IAAAyB,UAAA,CAAW,WAAX,CAAT;AAAgC,WAAhC;;AACC;;AAAS;;AACV;;AAAsC;AAAA,mBAAS,IAAAA,UAAA,CAAW,OAAX,CAAT;AAA4B,WAA5B;;AAA+B;;AAAa;;AAEtF;;AACA;;AAWL;;AACC;;AACI;;;;AAoBJ;;AAEH;;;;AAnCY;;AAAA;;AAaqB;;AAAA;;;;;;;;;;sEDXpBzB,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTnI,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;gBAE/B;;;;;;;;;;;;;;;;;;;;AEbH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACSM;;AACE;;AAAI;;AAAO;;AACX;;AAAW;;AAAiB;;AAC5B;;AACE;;AACA;AAAA;;AAAA;;AAAA;AAAA,WAAuB,OAAvB,EAAuB;AAAA;;AAAA;;AAAA;;AAAA;AAAA,SAAvB;;AAGE;;AAA0C;;AAC5C;;AAAM;;AACN;;AACA;;AACmB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAAyC,QAAzC,EAAyC;AAAA;;AAAA;;AAAA,yCAA2B,IAA3B;AAA+B,SAAxE;;AAEjB;;AACA;;AACF;;AACF;;AAEF;;;;;;;;;AAlBM;;AAAA;;AACO;;AAAA;;AASqC;;AAAA,sGAA6B,gBAA7B,EAA6B,qBAA7B;;;;;;AApBtD;;AACE;;AACE;;AACE;;AAAgB;;AAAG;;AACnB;;AAAI;;AAAK;;AACT;;AAAI;;AAAQ;;AACd;;AACF;;AACA;;AACE;;AAoBF;;AACF;;;;;;AArBQ;;AAAA;;;;;;;;AA4BR;;AACE;;AAAI;;AAAgB;;AACpB;;AAAQ;AAAA;;AAAA;;AAAA,wCAAwB,SAAxB;AAAiC,SAAjC;;AAAmC;;AAAQ;;AACrD;;;;;;AAFM;;AAAA;;;;QD5BK2J,S;AAmEX,yBAAoB/I,IAApB,EAA0C;AAAA;;AAAA;;AAAtB,aAAAA,IAAA,GAAAA,IAAA;AA/DpB,aAAArB,IAAA,GAAmB,IAAnB,CA+D0C,CA3D1C;;AACA,aAAAiJ,SAAA,GAAY,KAAZ;;AACA,aAAAoB,WAAA,GAAc,YAAM;AAClB,iBAAI,CAACpB,SAAL,GAAiB,CAAC,OAAI,CAACA,SAAvB;AACD,SAFD,CAyD0C,CAtD1C;;;AACA,aAAAF,YAAA,GAAe,UAAf;AACA,aAAAC,cAAA,GAAiB,8BAAjB;AACA,aAAAsB,cAAA,GAAiB,KAAjB;AACA,aAAAC,aAAA,GAAgB,KAAhB;AACA,aAAA5F,IAAA,GAAOf,IAAI,CAACkD,KAAL,CAAWpD,YAAY,CAACqD,OAAb,CAAsB,SAAtB,CAAX,CAAP,CAiD0C,CA/C1C;;AACA,aAAAzF,YAAA,GAAuB,SAAvB,CA8C0C,CA5C1C;;AACA,aAAAkJ,YAAA,GAAe,UAACC,QAAD;AAAA,iBAA6BA,QAAQ,CAACnH,KAAT,CAAeC,KAAf,KAAyB,KAAtD;AAAA,SAAf;AA2C6C,O,CAzC7C;;;;;uCACe;AAAA;;AACb,iBAAO,KAAKlC,IAAL,CAAU+B,OAAV,GAAoBlB,SAApB,CAA8B,UAAClC,IAAD,EAAkB;AAErD,mBAAI,CAAC0K,KAAL,GAAa1K,IAAI,CAAC2H,MAAL,CAAY,OAAI,CAAC6C,YAAjB,CAAb;AACD,WAHM,EAGJ,UAAApI,GAAG,EAAI;AACN,oBAAQA,GAAG,CAACC,MAAZ;AACE,mBAAK,GAAL;AAAU,uBAAI,CAACf,YAAL,GAAoB,kCAApB;AACR;;AACF,mBAAK,GAAL;AAAU,uBAAI,CAACA,YAAL,GAAoB,aAApB;AACR;;AACF;AAAS,uBAAI,CAACA,YAAL,GAAoB,uCAApB;AACP;AANJ;AAQD,WAZI,CAAP;AAaD,S,CAED;;;;iCACSI,K,EAAK;AAAA;;AACZ,eAAKL,IAAL,CAAUsJ,UAAV,CAAqBjJ,KAArB,EAA4BQ,SAA5B,CAAsC,UAAC0I,QAAD,EAAmB;AACvD,mBAAI,CAACF,KAAL,GAAa,OAAI,CAACA,KAAL,CAAW/C,MAAX,CAAkB,UAAAvI,CAAC;AAAA,qBAAIA,CAAC,CAACsC,KAAF,KAAYA,KAAhB;AAAA,aAAnB,CAAb;AACD,WAFD,EAGE,UAAAU,GAAG,EAAI;AACL,oBAAQA,GAAG,CAACC,MAAZ;AACE,mBAAK,GAAL;AACE,uBAAI,CAACf,YAAL,GAAoB,kCAApB;AACA;;AACF,mBAAK,GAAL;AACE,uBAAI,CAACA,YAAL,GAAoB,mCAApB;AACA;;AACF,mBAAK,GAAL;AACE,uBAAI,CAACA,YAAL,GAAoB,uBAApB;AACA;;AACF;AACE,uBAAI,CAACA,YAAL,GAAoB,uCAApB;AACA;AAZJ;AAeD,WAnBH;AAoBD;;;mCAIO;AAAA;;AACN,eAAKD,IAAL,CAAUwJ,YAAV,CAAuB3I,SAAvB,CAAiC,YAAM;AACnC,mBAAI,CAAC4I,YAAL;AACD,WAFH;AAGA,eAAK9K,IAAL,GAAY,KAAK8K,YAAL,EAAZ;AACD;;;iCAEQC,I,EAAM;AACb,eAAKC,cAAL,GAAsBD,IAAtB;AACD;;;sCAEU;AACT,eAAK/K,IAAL,CAAUmE,WAAV;AACD;;;;;;;uBAlFUiG,S,EAAS,gJ;AAAA,K;;;YAATA,S;AAAS,qC;AAAA,c;AAAA,a;AAAA,wjB;AAAA;AAAA;ACXtB;;AACE;;AA+BF;;AACA;;AACE;;AAEF;;AACA;;;;;;AApCuB;;AAAA,0GAAiD,UAAjD,EAAiD,GAAjD;;AAiCV;;AAAA,0FAAkB,aAAlB,EAAkB,oBAAlB,EAAkB,eAAlB,EAAkB,eAAlB,EAAkB,UAAlB,EAAkB,kBAAlB;;;;;;;;;sEDvBAA,S,EAAS;cALrB,uDAKqB;eALX;AACT7J,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKW,Q;;;;;;;;;;;;;;;;;;;;;;AEXtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACIE;;AACG;;AAAuB;AAAA;;AAAA;;AAAA;AAAA;;AAClB;;AACI;;AACA;;AAAI;;AAAgB;;AACxB;;AACL;;AAEJ;;;;;;AANY;;AAAA;;AACI;;AAAA;;AACC;;AAAA;;;;QDALwK,qB;AAsBX,qCAAmBvI,MAAnB,EAAmC;AAAA;;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AArBrB,aAAAwI,SAAA,GAAkB,CAClB;AACE5K,eAAK,EAAE,OADT;AAEE6K,cAAI,EAAC,iBAFP;AAGEC,cAAI,EAAE;AAHR,SADkB,EAMlB;AACE9K,eAAK,EAAE,QADT;AAEE6K,cAAI,EAAC,iBAFP;AAGEC,cAAI,EAAE;AAHR,SANkB,CAAlB;AAkBA,aAAAC,WAAA,GAAoB,KAApB;AAIG3I,cAAM,CAAC4I,MAAP,CAAcC,IAAd,CAAmB,8DAAO,UAAApE,KAAK;AAAA,iBAAIA,KAAK,YAAY,6DAArB;AAAA,SAAZ,CAAnB,EACMjF,SADN,CACgB,UAAAiF,KAAK,EAAI;AAChB,iBAAI,CAACqE,UAAL,GAAkBC,MAAM,CAACC,MAAP,CAAcvE,KAAd,EAAqB,CAArB,CAAlB;AACH,SAHN;AAIF;;;;mCAES,CACP;;;sCAGU;AACT,eAAKkE,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AAED;;;mCACO;AACN3H,sBAAY,CAACiI,KAAb;AAEAC,gBAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;;;;;;;uBAzCUb,qB,EAAqB,uH;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,c;AAAA,a;AAAA,qU;AAAA;AAAA;ACRlC;;AACE;;AACI;;AACJ;;AACA;;AASD;;AAAyB;AAAA,mBAAS,IAAAc,QAAA,EAAT;AAAmB,WAAnB;;AACpB;;AACI;;AACA;;AAAI;;AAAK;;AACb;;AACJ;;AAEF;;;;AAhBqB;;AAAA;;;;;;;;;sEDIRd,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT1K,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;AERlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOauL,S;AAEb,yBAAqBtJ,MAArB,EAAmC;AAAA;;AAAd,aAAAA,MAAA,GAAAA,MAAA;AAEpB;;;;oCAGCiH,I,EACAsC,K,EAA0B;AACtB,eAAKC,UAAL,GAAkBtI,IAAI,CAACkD,KAAL,CAAWpD,YAAY,CAACqD,OAAb,CAAqB,SAArB,CAAX,CAAlB;;AACA,cAAG,KAAKmF,UAAL,IAAmBpI,SAAtB,EAAiC;AAC/B,iBAAKpB,MAAL,CAAYqB,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACE,mBAAO,KAAP;AACH;;AACD,iBAAO,IAAP;AACH;;;;;;;uBAfUiI,S,EAAS,8G;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACVG,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;ACPtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,S;AAEX,yBAAoB1J,MAApB,EAAkC;AAAA;;AAAd,aAAAA,MAAA,GAAAA,MAAA;AAEnB;;;;oCAEWmG,K,EAA6B;AACvC,cAAM5I,YAAY,GAAG4I,KAAK,CAAC7I,IAAN,CAAWC,YAAhC;AACA,eAAKiM,UAAL,GAAkBtI,IAAI,CAACkD,KAAL,CAAWpD,YAAY,CAACqD,OAAb,CAAqB,SAArB,CAAX,CAAlB;;AACA,cAAI,KAAKmF,UAAL,CAAgB,MAAhB,MAA4BjM,YAAhC,EAA8C;AAC5C,iBAAKyC,MAAL,CAAYqB,QAAZ,CAAqB,CAAC,SAAD,CAArB;AACA,mBAAO,KAAP;AACD;;AACD,iBAAO,IAAP;AACD;;;;;;;uBAdUqI,S,EAAS,8G;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACVD,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;ACNtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaE,U;;;;;;;kCAEDtK,K,EAAmBuK,G,EAAW;AACtC,cAAMC,MAAM,GAAG,EAAf;;AACA,cAAIxK,KAAK,IAAI+B,SAAb,EAAwB;AAAA,uDACL/B,KADK;AAAA;;AAAA;AACtB,kEAAwB;AAAA,oBAAfyF,IAAe;AACrBA,oBAAI,CAAC0C,IAAL,KAAcoC,GAAd,IAAqB9E,IAAI,CAACnF,MAAL,KAAgBiK,GAAtC,GAA6CC,MAAM,CAAC9E,IAAP,CAAYD,IAAZ,CAA7C,GAA+D,IAA/D;AACD;AAHqB;AAAA;AAAA;AAAA;AAAA;AAIvB;;AACF,iBAAO+E,MAAP;AACA;;;;;;;uBAVUF,U;AAAU,K;;;;YAAVA,U;AAAU;;;;;sEAAVA,U,EAAU;cAHtB,kDAGsB;eAHjB;AACJG,cAAI,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;ACLvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaaC,c;AAcX,8BAAmBC,IAAnB,EAAqC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAbnB,aAAA/H,IAAA,GAAOf,IAAI,CAACkD,KAAL,CAAWpD,YAAY,CAACqD,OAAb,CAAsB,SAAtB,CAAX,CAAP,CAaqC,CAXrC;AACA;AACA;AACA;AACA;AACA;;AAEO,aAAApB,GAAA,GAAc,yEAAYgH,MAAZ,GAAqB,QAAnC;AACC,aAAAC,aAAA,GAAgB,IAAI,4CAAJ,EAAhB;AACD,aAAA/B,YAAA,GAAe,KAAK+B,aAAL,CAAmBC,YAAnB,EAAf;AAEiC;;;;kCAE9B;AACR,iBAAO,KAAKH,IAAL,CAAU7K,GAAV,CAAc,KAAK8D,GAAnB,EAAwB;AAAEmH,mBAAO,EAAE;AAAEC,2BAAa,mBAAY,KAAKpI,IAAL,CAAUxB,KAAtB;AAAf;AAAX,WAAxB,EAAqFoI,IAArF,CAA0F,kEAAW,KAAKyB,WAAhB,CAA1F,CAAP;AACD;;;kCAEStN,E,EAAW;AACnB,iBAAO,KAAKgN,IAAL,CAAU7K,GAAV,CAAc,KAAK8D,GAAL,GAAWjG,EAAzB,EAA6B;AAAEoN,mBAAO,EAAE;AAAEC,2BAAa,mBAAY,KAAKpI,IAAL,CAAUxB,KAAtB;AAAf;AAAX,WAA7B,EAAyFoI,IAAzF,CAA8F,kEAAW,KAAKyB,WAAhB,CAA9F,CAAP;AACD;;;gCAEOrI,I,EAAWjD,K,EAAe;AAAA;;AAChC,iBAAO,KAAKgL,IAAL,CAAUO,GAAV,CAAc,KAAKtH,GAAL,GAAWjE,KAAzB,EAAiCiD,IAAjC,EAAwC;AAAEmI,mBAAO,EAAE;AAAEC,2BAAa,mBAAY,KAAKpI,IAAL,CAAUxB,KAAtB;AAAf,aAAX;AAA2D+J,mBAAO,EAAE;AAApE,WAAxC,EAA0H3B,IAA1H,CACH,2DAAI,YAAM;AACR,mBAAI,CAACqB,aAAL,CAAmBjD,IAAnB;AACD,WAFD,CADG,CAAP;AAKD;;;iCAEQzG,I,EAAc;AAAA;;AACrB,iBAAO,KAAKwJ,IAAL,CAAUS,IAAV,CAAe,KAAKxH,GAApB,EAA0BzC,IAA1B,EAAiC;AAAE4J,mBAAO,EAAE;AAAEC,2BAAa,mBAAY,KAAKpI,IAAL,CAAUxB,KAAtB;AAAf,aAAX;AAA2D+J,mBAAO,EAAE;AAApE,WAAjC,EAAmH3B,IAAnH,CACH,kEAAW,KAAKyB,WAAhB,CADG,EAEH,2DAAI,YAAM;AACR,mBAAI,CAACJ,aAAL,CAAmBjD,IAAnB;AACD,WAFD,CAFG,CAAP;AAMD;;;mCAEUjI,K,EAAe;AAAA;;AACxB,iBAAO,KAAKgL,IAAL,WAAiB,KAAK/G,GAAL,GAAWjE,KAA5B,EAAmC;AAAEoL,mBAAO,EAAE;AAAEC,2BAAa,mBAAY,KAAKpI,IAAL,CAAUxB,KAAtB;AAAf;AAAX,WAAnC,EAAgGoI,IAAhG,CACH,2DAAI,UAAAvI,IAAI;AAAA,mBAAIA,IAAJ;AAAA,WAAR,CADG,EAEH,kEAAW,KAAKgK,WAAhB,CAFG,EAGH,2DAAI,YAAM;AACR,mBAAI,CAACJ,aAAL,CAAmBjD,IAAnB;AACD,WAFD,CAHG,CAAP;AAOD;;;oCAEWyD,Q,EAA6B;AACvC,cAAIA,QAAQ,CAACC,KAAT,YAA0BC,UAA9B,EAA0C;AAAE;AAC1C,mBAAO,wDAAW,6BAA6BF,QAAQ,CAACC,KAAT,CAAeE,OAAvD,CAAP,CADwC,CAC8B;AACvE,WAFD,MAEO;AACL,mBAAO,wDAAW;AAChBlL,oBAAM,EAAE+K,QAAQ,CAAC/K,MADD;AAEhBmL,wBAAU,EAAEJ,QAAQ,CAACI,UAFL;AAGhBD,qBAAO,EAAEH,QAAQ,CAACG;AAHF,aAAX,CAAP;AAKD;AACF;;;;;;;uBA7DUd,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAHb;;;;;sEAGDA,c,EAAc;cAJ1B,wDAI0B;eAJf;AACVN,oBAAU,EAAE;AADF,S;AAIe,Q;;;;;;;;;;;;;;;;;;;;;;ACb3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUasB,W;AAMX,2BAAoBf,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAJb,aAAA/G,GAAA,GAAc,yEAAYgH,MAA1B;AACA,aAAAe,WAAA,GAAqC,IAAI,oDAAJ,CAAyBhK,YAAY,CAACqD,OAAb,CAAqB,SAArB,CAAzB,CAArC;AACP,aAAApC,IAAA,GAAwB,KAAK+I,WAAL,CAAiBb,YAAjB,EAAxB,CAEsC,CACpC;AACA;AACA;AACD;;;;iCAEQ7M,I,EAAW;AAClB,iBAAO,KAAK0M,IAAL,CAAUS,IAAV,WAAuB,KAAKxH,GAA5B,WAAuC3F,IAAvC,EAA8C;AAAEkN,mBAAO,EAAE;AAAX,WAA9C,CAAP;AACD;;;gCAEOxL,K,EAAcyB,K,EAAe;AACnC,iBAAO,KAAKuJ,IAAL,CAAU7K,GAAV,WAAsB,KAAK8D,GAA3B,mBAAuCjE,KAAvC,GAAgD;AAAEoL,mBAAO,EAAE;AAAEC,2BAAa,mBAAY5J,KAAZ;AAAf;AAAX,WAAhD,CAAP;AACD;;;;;;;uBAlBUsK,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVtB,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACVxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUawB,a;AAaX,6BAAmBjB,IAAnB,EAAqC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAZnB,aAAA/H,IAAA,GAAOf,IAAI,CAACkD,KAAL,CAAWpD,YAAY,CAACqD,OAAb,CAAsB,SAAtB,CAAX,CAAP;AAEA,aAAA5D,KAAA,GAAcS,IAAI,CAACkD,KAAL,CAAWpD,YAAY,CAACqD,OAAb,CAAqB,SAArB,CAAX,CAAd;AAYO,aAAApB,GAAA,GAAc,sEAAYgH,MAAZ,GAAqB,SAAnC;AACC,aAAAiB,aAAA,GAAgB,IAAI,4CAAJ,EAAhB;AACD,aAAAC,UAAA,GAAa,KAAKD,aAAL,CAAmBf,YAAnB,EAAb;AAEA,aAAA3F,wBAAA,GAA2B,IAAI,4CAAJ,EAA3B;AAEP,aAAA4F,OAAA,GAAU,IAAI,gEAAJ,CACR;AACE,2BAAiB,YAAY,KAAK3J,KADpC;AAEE,0BAAgB;AAFlB,SADQ,CAAV;AARwC;;;;8CARlB8C,O,EAAiB;AACrC,eAAK6H,kBAAL,GAA0B7H,OAA1B;AACD;;;gDAEuB;AACtB,iBAAO,KAAK6H,kBAAZ;AACD;;;wCAqBY;AACX,iBAAO,KAAKpB,IAAL,CAAU7K,GAAV,WAAiB,KAAK8D,GAAtB,GAA6B;AAAEmH,mBAAO,EAAE;AAAEC,2BAAa,mBAAY,KAAKpI,IAAL,CAAUxB,KAAtB;AAAf;AAAX,WAA7B,CAAP;AACD;;;oCAEW0C,K,EAAYnG,E,EAAY;AAAA;;AAClC,iBAAO,KAAKgN,IAAL,CAAUO,GAAV,CAAc,KAAKtH,GAAL,GAAWjG,EAAzB,EAA6BmG,KAA7B,EAAoC;AAAEiH,mBAAO,EAAE;AAAEC,2BAAa,mBAAY,KAAKpI,IAAL,CAAUxB,KAAtB;AAAf;AAAX,WAApC,EACNoI,IADM,CAEL,2DAAI,UAAAvL,IAAI;AAAA,mBAAIA,IAAJ;AAAA,WAAR,CAFK,EAGL,2DAAI,YAAM;AACR,mBAAI,CAACwF,QAAL,CAAcmE,IAAd;AACD,WAFD,CAHK,CAAP;AAOD;;;kCAES9D,K,EAAa;AAAA;;AACrB,iBAAO,KAAK6G,IAAL,CAAUS,IAAV,CAAe,KAAKxH,GAApB,EAA0BE,KAA1B,EAAkC;AAAEiH,mBAAO,EAAE;AAAEC,2BAAa,mBAAY,KAAKpI,IAAL,CAAUxB,KAAtB;AAAf;AAAX,WAAlC,EACJoI,IADI,CAEH,2DAAI,YAAK;AACP,mBAAI,CAAC/F,QAAL,CAAcmE,IAAd;AACD,WAFD,CAFG,CAAP;AAMD;;;oCAEWjK,E,EAAY;AAAA;;AACtB,iBAAO,KAAKgN,IAAL,qBAAoB,KAAK/G,GAAzB,SAA+BjG,EAA/B,GAAqC;AAAEoN,mBAAO,EAAE;AAAEC,2BAAa,mBAAY,KAAKpI,IAAL,CAAUxB,KAAtB;AAAf;AAAX,WAArC,EAAkGoI,IAAlG,CACL,2DAAI,YAAM;AACR,mBAAI,CAAC/F,QAAL,CAAcmE,IAAd;AACD,WAFD,CADK,CAAP;AAKD;;;4BAjCc;AACb,iBAAO,KAAKiE,aAAZ;AACD;;;;;;;uBA9BUD,a,EAAa,uH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAHZ;;;;;sEAGDA,a,EAAa;cAJzB,wDAIyB;eAJd;AACVxB,oBAAU,EAAE;AADF,S;AAIc,Q;;;;;;;;;;;;;;;;;;;;;;ACV1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWa4B,e;AAGX;AAEA,+BAAmBrB,IAAnB,EAAqC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAJnB,aAAA/H,IAAA,GAAOf,IAAI,CAACkD,KAAL,CAAWpD,YAAY,CAACqD,OAAb,CAAsB,SAAtB,CAAX,CAAP;AAMO,aAAApB,GAAA,GAAc,sEAAYgH,MAAZ,GAAqB,WAAnC;AACC,aAAAiB,aAAA,GAAgB,IAAI,4CAAJ,EAAhB;AACD,aAAAC,UAAA,GAAa,KAAKD,aAAL,CAAmBf,YAAnB,EAAb;AAJiC,O,CAMxC;AACA;AACA;AACA;AACA;;;;;0CAOe;AACb,iBAAO,KAAKH,IAAL,CAAU7K,GAAV,CAAc,KAAK8D,GAAnB,EAAwB;AAAEmH,mBAAO,EAAE;AAAEC,2BAAa,mBAAY,KAAKpI,IAAL,CAAUxB,KAAtB;AAAf;AAAX,WAAxB,CAAP;AACD;;;oCAEW8C,O,EAAe;AAAA;;AACzB,iBAAO,KAAKyG,IAAL,CAAUS,IAAV,CAAe,KAAKxH,GAApB,EAAyBM,OAAzB,EAAkC;AAAE6G,mBAAO,EAAE;AAAEC,2BAAa,mBAAY,KAAKpI,IAAL,CAAUxB,KAAtB;AAAf;AAAX,WAAlC,EACJoI,IADI,CAEH,2DAAI,YAAM;AACR,mBAAI,CAAC/F,QAAL,CAAcmE,IAAd;AACD,WAFD,CAFG,EAKH,kEAAW,KAAKqD,WAAhB,CALG,CAAP;AAOD;;;sCAEa9J,I,EAAWxD,E,EAAY;AAAA;;AACnC,iBAAO,KAAKgN,IAAL,CAAUO,GAAV,CAAc,KAAKtH,GAAL,GAAWjG,EAAzB,EAA6BwD,IAA7B,EAAmC;AAAE4J,mBAAO,EAAE;AAAEC,2BAAa,mBAAY,KAAKpI,IAAL,CAAUxB,KAAtB;AAAf;AAAX,WAAnC,EACJoI,IADI,CAEH,2DAAI,UAAAvL,IAAI;AAAA,mBAAIA,IAAJ;AAAA,WAAR,CAFG,EAGH,2DAAI,YAAM;AACR,mBAAI,CAACwF,QAAL,CAAcmE,IAAd;AACD,WAFD,CAHG,EAML,kEAAW,KAAKqD,WAAhB,CANK,CAAP;AAQD;;;sCAEa/G,O,EAAc;AAAA;;AAC1B,iBAAO,KAAKyG,IAAL,WAAiB,KAAK/G,GAAL,GAAWM,OAAO,CAACxC,GAApC,EAAyC;AAAEqJ,mBAAO,EAAE;AAAEC,2BAAa,mBAAY,KAAKpI,IAAL,CAAUxB,KAAtB;AAAf;AAAX,WAAzC,EACJoI,IADI,CAEH,kEAAW,KAAKyB,WAAhB,CAFG,EAGH,2DAAI,YAAM;AACR,mBAAI,CAACxH,QAAL,CAAcmE,IAAd;AACD,WAFD,CAHG,CAAP;AAOD;;;oCAEWyD,Q,EAA6B;AACvC,iBAAO,wDAAW;AAChB/K,kBAAM,EAAE+K,QAAQ,CAAC/K,MADD;AAEhBmL,sBAAU,EAAEJ,QAAQ,CAACI,UAFL;AAGhBD,mBAAO,EAAEH,QAAQ,CAACG;AAHF,WAAX,CAAP;AAKD;;;4BA9CW;AACV,iBAAO,KAAKK,aAAZ;AACD;;;;;;;uBAnBUG,e,EAAe,uH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACV5B,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACX5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;QAOa6B,c;;;;;;;mCAGH,CACP;;;;;;;uBAJUA,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,oN;AAAA;AAAA;ACP3B;;AACE;;AACE;;AACE;;AACE;;AACE;;AACA;;AAAI;;AAAK;;AACX;;AACF;;AACA;;AACE;;AACE;;AACA;;AAAI;;AAAU;;AAChB;;AACF;;AACF;;AAEF;;AAEA;;AAEF;;;;AAjBW;;AAAA;;AAMA;;AAAA;;;;;;;;;sEDHEA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTzN,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;AEP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACQgB;;AACI;;AAAI;;AAAgB;;AACxB;;;;;;AACA;;AACI;;AAAI;;AAAe;;AACvB;;;;;;AAGI;;AACI;;AAAG;;AAAqB;;AAC5B;;;;;;AAEA;;AACI;;AAAG;;AAAqB;;AAC5B;;;;;;AAUA;;AACI;;AAAG;;AAAqB;;AAC5B;;;;;;AAEA;;AACI;;AAAG;;AAAiD;;AACxD;;;;;;;;AAGJ;;AACI;;AAA2C;;AAAgB;;AAC3D;;AAA6C;AAAA;;AAAA;;AAAA,iBAAS,OAAAoC,IAAA,QAAT;AAAqB,SAArB,EAAsB,OAAtB,EAAsB;AAAA;;AAAA;;AAAA,wCACzC,KADyC;AACpC,SADc;;AACZ;;AAAO;;AAC5C;;;;;;;;AAEI;;AAA0C;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAe;;AAClF;;AACA;AAAA;;AAAA;;AAAA,wCAAsB,KAAtB;AAA2B,SAA3B,EAA4B,OAA5B,EAA4B;AAAA;;AAAA;;AAAA,iBACnB,QAAAA,IAAA,QADmB;AACP,SADrB,EAA4B,OAA5B,EAA4B;AAAA;;AAAA;;AAAA,oCACa,KADb;AACkB,SAD9C;;AACgD;;AAAQ;;;;QDzC/DoL,sB;AAUX,sCAAoBtF,QAApB,EAA+C;AAAA;;AAA3B,aAAAA,QAAA,GAAAA,QAAA;AAPpB,aAAA9B,YAAA,GAAwB,KAAxB;AACA,aAAAqH,QAAA,GAAoB,KAApB;AACA,aAAAlE,IAAA,GAAO,IAAP;AACA,aAAAmE,UAAA,GAAa,IAAb;AACA,aAAAhI,SAAA,GAAoB,IAApB;AACA,aAAAiI,UAAA,GAAqB,IAArB;AAGE,aAAK7M,SAAL;AACD;;;;mCAEO,CACP;;;oCAEmB;AAClB,eAAKsB,IAAL,GAAY,IAAI,wDAAJ,CAAc;AACxB2J,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW7K,QAAZ,CAApB,CADkB;AAExB6G,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW7G,QAAZ,CAApB,CAFiB;AAGxB0M,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,EAApB,CAHiB;AAIxBnE,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWvI,QAAZ,CAApB,CAJkB;AAKxB2M,qBAAS,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW3M,QAAZ,CAApB;AALa,WAAd,CAAZ;AAOD;;;qCAEY;AAAA;;AACX,cAAI,KAAKkB,IAAL,CAAUf,KAAd,EAAqB;AACnB,gBAAME,OAAO,GAAW;AACtB,sBAAQ,KAAKa,IAAL,CAAUd,KAAV,CAAgByK,IADF;AAEtB,uBAAS,KAAK3J,IAAL,CAAUd,KAAV,CAAgByG,KAFH;AAGtB,uBAAS,sBAHa;AAItB,sBAAQ,KAAK3F,IAAL,CAAUd,KAAV,CAAgBmI,IAJF;AAKtB,2BAAa,KAAKrH,IAAL,CAAUd,KAAV,CAAgBuM;AALP,aAAxB;AAOA,iBAAK3F,QAAL,CAAc4F,WAAd,CAA0BvM,OAA1B,EAAmCE,SAAnC,CAA6C,UAAClC,IAAD,EAAe;AAC1D,qBAAI,CAAC6C,IAAL,CAAUV,KAAV;;AACA,qBAAI,CAAC0E,YAAL,GAAoB,KAApB;AACD,aAHD;AAID,WAZD,MAYO;AACL,iBAAKA,YAAL,GAAoB,IAApB;AACD;;AAAA;AACF;;;oCAEWZ,O,EAAc;AACxB,eAAKiI,QAAL,GAAgB,IAAhB;AACA,eAAK/H,SAAL,GAAiBF,OAAO,CAACxC,GAAzB;AACA,eAAK2K,UAAL,GAAkBnI,OAAO,CAACoI,KAA1B;AACA,eAAKxL,IAAL,CAAUkC,UAAV,CAAqB;AACnByH,gBAAI,EAAEvG,OAAO,CAACuG,IADK;AAEnBhE,iBAAK,EAAEvC,OAAO,CAACuC;AAFI,WAArB;AAID;;;sCAEa;AAAA;;AACZ,cAAI,KAAKrC,SAAL,KAAmB,IAAvB,EAA6B;AAC3B,gBAAMqI,UAAU,GAAG;AACjB,sBAAQ,KAAK3L,IAAL,CAAUd,KAAV,CAAgByK,IADP;AAEjB,uBAAS,KAAK3J,IAAL,CAAUd,KAAV,CAAgByG,KAFR;AAGjB,uBAAS,KAAK4F,UAHG;AAIjB,sBAAQ,KAAKvL,IAAL,CAAUd,KAAV,CAAgBmI,IAJP;AAKjB,2BAAa,KAAKrH,IAAL,CAAUd,KAAV,CAAgBuM;AALZ,aAAnB;;AAQA,gBAAI,KAAKzL,IAAL,CAAUf,KAAd,EAAqB;AACnB,mBAAK6G,QAAL,CAAc8F,aAAd,CAA4BD,UAA5B,EAAwC,KAAKrI,SAA7C,EAAwDjE,SAAxD,CAAkE,UAAC6H,GAAD,EAAS;AACzE,uBAAI,CAACmE,QAAL,GAAgB,KAAhB;;AACA,uBAAI,CAACrL,IAAL,CAAUV,KAAV;;AACA,uBAAI,CAAC0E,YAAL,GAAoB,KAApB;AACD,eAJD;AAKD,aAND,MAMO;AACL,mBAAKA,YAAL,GAAoB,IAApB;AACD;AACF;AACF;;;;;;;uBA3EUoH,sB,EAAsB,kJ;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,e;AAAA,c;AAAA,+0B;AAAA;AAAA;ACRnC;;AACI;;AACI;;AAA4C;AAAA,mBAAY,uBAAZ;AAA+B,WAA/B;;AAAgC;;AAChF;;AACA;;AACI;;AACI;;AAAmC;AAAA,mBAAY,IAAAS,UAAA,EAAZ;AAAwB,WAAxB;;AAC/B;;AAGA;;AAGA;;AACI;;AAAI;;AAAmB;;AAAK;;AAC5B;;AAGA;;AAAI;;AAAe;;AAAK;;AACxB;;AAGA;;AAAI;;AAAmB;;AACvB;;AAAsB;;AAAtB;;AACA;;AAAI;;AAAI;;AACR;;AACI;;AAA0B;;AAAQ;;AAClC;;AAA2B;;AAAW;;AACtC;;AAA8B;;AAAc;;AAC5C;;AAA+B;;AAAU;;AAC7C;;AACA;;AAGA;;AAAI;;AAAK;;AAAK;;AACd;;AAGJ;;AAEA;;AAKA;;AAMJ;;AACJ;;AACJ;;AACJ;;;;;;AAjDoC;;AAAA;;AACR;;AAAA;;AACP;;AAAA;;AAGA;;AAAA;;AAKI;;AAAA;;AAIA;;AAAA;;AAYA;;AAAA;;AAIA;;AAAA;;AAKY;;AAAA,kGAAwC,UAAxC,EAAwC,GAAxC;;;;;;;;;sEDhCxBT,sB,EAAsB;cALlC,uDAKkC;eALxB;AACT1N,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;AETnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOakO,kB;AAEX,oCAAc;AAAA;AAEb;;;;mCAEO,CACP;;;;;;;uBAPUA,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,qC;AAAA,c;AAAA,a;AAAA,kH;AAAA;AAAA;ACP9B;;AACG;;AACE;;AACA;;AACF;;AACJ;;;;;;;;;sEDEaA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTpO,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;AEP/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOamO,mB;AAEX,qCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,sC;AAAA,c;AAAA,a;AAAA,uE;AAAA;AAAA;ACPhC;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACE;;AACF;;AACJ;;;;;;;;;sEDFaA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTrO,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;AEPhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaoO,mB;AAKX,qCAAc;AAAA;;AAHd,aAAAC,aAAA,GAAwB,SAAxB;AACA,aAAAC,gBAAA,GAA2B,YAA3B;AACA,aAAAC,eAAA,GAA0B,WAA1B;AACiB;;;;mCAET,CACP;;;;;;;uBARUH,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,8P;AAAA;AAAA;ACPhC;;AACE;;AACI;;AACI;;AACI;;AACA;;AAAG;;AAAS;;AAChB;;AACA;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAAG;;AAAU;;AACjB;;AACA;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAAG;;AAAS;;AAChB;;AACA;;AACJ;;AACJ;;AACF;;;;AAjB0B;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;;;;;;;;sEDdbA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTtO,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;AEPhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;QAQawO,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,oN;AAAA;AAAA;ACP5B;;AACI;;AACE;;AACE;;AACE;;AACE;;AACA;;AAAI;;AAAW;;AACjB;;AACF;;AACA;;AACE;;AACE;;AACA;;AAAI;;AAAO;;AACb;;AACF;;AACF;;AAEF;;AAEA;;AAEF;;;;AAjBW;;AAAA;;AAMA;;AAAA;;;;;;;;;sEDHAA,e,EAAe;cAN3B,uDAM2B;eANjB;AACT1O,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAMiB,Q;;;;;;;;;;;;;;;;;;;;AER5B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMyO,WAAW,GAAG;AACzBpO,gBAAU,EAAE,KADa;AAEzB6L,YAAM,EAAC;AAFkB,KAApB;AAMP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACjBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAY7L,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBqO,eAAzB,CAAyC,yDAAzC,WACS,UAAA/M,GAAG;AAAA,aAAI6B,OAAO,CAACoJ,KAAR,CAAcjL,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminComponent } from \"../app/views/admin/admin.component\";\r\nimport { ModalComponent } from \"../app/components/modal/modal.component\";\r\nimport { ViewInventaryComponent } from './views/admin/view-inventary/view-inventary.component';\r\nimport { ViewStaffComponent } from './views/admin/view-staff/view-staff.component';\r\nimport { ViewOrdersComponent } from \"./views/waiter/view-orders/view-orders.component\";\r\nimport {  WaiterComponent } from \"./views/waiter/waiter.component\";\r\nimport { ViewStatesComponent } from \"./views/waiter//view-states/view-states.component\";\r\nimport { LoginComponent } from \"../app/components/login/login.component\";\r\nimport { AuthGuard } from \"./guards/auth.guard\";\r\nimport { RoleGuard } from \"./guards/role.guard\";\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  {path:'', component:LoginComponent},\r\n  {\r\n    path: 'admin', component: AdminComponent, canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: ViewStaffComponent, canActivate: [RoleGuard], data: { expectedRole: true } },\r\n      { path: 'staff', component: ViewStaffComponent, canActivate: [RoleGuard], data: { expectedRole: true } },\r\n      { path: 'inventario', component: ViewInventaryComponent, canActivate: [RoleGuard], data: { expectedRole: true } },\r\n    ]\r\n  },\r\n  { path: 'mesero', component:  WaiterComponent, canActivate: [AuthGuard],\r\n  children: [\r\n    { path: '', component: ViewOrdersComponent },\r\n    { path: 'orders', component: ViewOrdersComponent },\r\n    { path: 'states', component:ViewStatesComponent },\r\n  ]\r\n},\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n// imports y exports de cada componente es como un index de componentes\r\n@Component({\r\n  selector: 'app-raiz',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\n// define la funcionalidad del componente\r\nexport class AppComponent {\r\n  title = 'BQ API';\r\n}\r\n","\r\n<div class=\"main-container\">\r\n  <div class=\"left-side\">\r\n  <app-vertical-menu></app-vertical-menu>\r\n  </div>\r\n  <div class=\"right-side\">\r\n    <app-header></app-header>\r\n      <router-outlet></router-outlet>\r\n  </div>\r\n  \r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { ConfirmationPopoverModule } from 'angular-confirmation-popover';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AdminComponent } from './views/admin/admin.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { VerticalMenuComponent } from './components/vertical-menu/vertical-menu.component';\r\nimport { StaffList } from './components/staff-list/staff-list.component';\r\nimport { ViewInventaryComponent } from './views/admin/view-inventary/view-inventary.component';\r\nimport { ViewStaffComponent } from './views/admin/view-staff/view-staff.component';\r\nimport { ModalComponent } from './components/modal/modal.component';\r\nimport { HttpClientModule }  from '@angular/common/http';\r\nimport { JsonApiService } from \"./services/JsonApiService.service\";\r\nimport { ReactiveFormsModule, FormGroup} from '@angular/forms';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AddNewUserComponent } from './components/add-new-user/add-new-user.component';\r\nimport { OrderListComponent } from './components/order-list/order-list.component';\r\nimport { RouterModule, ActivatedRoute } from '@angular/router';\r\nimport { ProductsListComponent } from './components/products-list/products-list.component';\r\nimport { filterPipe } from './pipes/filter.pipe';\r\nimport { WaiterComponent } from './views/waiter/waiter.component';\r\nimport { ViewOrdersComponent } from './views/waiter/view-orders/view-orders.component';\r\nimport { ViewStatesComponent } from './views/waiter/view-states/view-states.component';\r\nimport { OrdersService } from './services/orders/orders.service';\r\nimport { ProductsService } from './services/products.service';\r\nimport { OrderSendComponent } from './components/order-send/order-send.component';\r\nimport { LoginComponent } from './components/login/login.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    VerticalMenuComponent,\r\n    AdminComponent,\r\n    StaffList,\r\n    ViewInventaryComponent,\r\n    ViewStaffComponent,\r\n    ModalComponent,\r\n    AddNewUserComponent,\r\n    OrderListComponent,\r\n    ProductsListComponent,\r\n    filterPipe,\r\n    WaiterComponent,\r\n    ViewOrdersComponent,\r\n    ViewStatesComponent,\r\n    OrderSendComponent,\r\n    LoginComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    // MatCardModule,\r\n    ConfirmationPopoverModule.forRoot({\r\n      confirmButtonType: 'danger', // set defaults here\r\n    }),\r\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\r\n  ],\r\n//   exports: [AddNewUserComponent],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\r\n  providers: [JsonApiService, OrdersService,ProductsService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { JsonApiService } from 'src/app/services/JsonApiService.service';\r\n\r\n@Component({\r\n  selector: 'app-add-new-user',\r\n  templateUrl: './add-new-user.component.html',\r\n  styleUrls: ['./add-new-user.component.scss']\r\n})\r\nexport class AddNewUserComponent implements OnInit {\r\n\r\n  addForm: FormGroup\r\n  errorMessage: string = 'default'\r\n\r\n  constructor(private formBuilder: FormBuilder, private json: JsonApiService) {\r\n    this.buildForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n  buildForm() {\r\n    this.addForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required]],\r\n    })\r\n  }\r\n\r\n  getEmail() {\r\n    return this.addForm.get('email')\r\n  }\r\n\r\n  getPassword() {\r\n    return this.addForm.get('password')\r\n  }\r\n\r\n\r\n  //agregar nuevo usuario\r\n  addUser() {\r\n    if (this.addForm.valid) {\r\n      const value = this.addForm.value;\r\n      const newUser: object = {\r\n        \"email\": value.email, \"roles\": { \"admin\": false }, \"password\": value.password,\r\n      };\r\n      this.json.postUser(newUser).subscribe((data: any) => {\r\n        this.addForm.reset()\r\n      },\r\n        err => {\r\n          switch (err.status) {\r\n            case 400:\r\n              this.errorMessage = 'no hay no se proveen `email` o `password` o ninguno de los dos'\r\n              break;\r\n            case 401:\r\n              this.errorMessage = 'no hay cabecera de autenticación'\r\n              break;\r\n            case 403:\r\n              this.errorMessage = 'ya existe usuaria con ese `email`'\r\n              break;\r\n            default:\r\n              this.errorMessage = 'se produjo un error, intente de nuevo'\r\n              break;\r\n          }\r\n\r\n        })\r\n    } else {\r\n      this.addForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","<h2>Agregar Empleado</h2>\r\n<form class=\"add-employee\" [formGroup]=\"addForm\">\r\n   <div class=\"add-employee-data\">\r\n        <div class=\"add-employee-input\">\r\n            <input type=\"email\" placeholder=\"Email\" formControlName=\"email\">\r\n            <input type=\"password\" placeholder=\"Contraseña\" formControlName=\"password\">\r\n\r\n        </div>\r\n        <div class=\"add-employee-validations\">\r\n            <div *ngIf=\"getEmail().errors && getEmail().touched\">\r\n                <p *ngIf=\"getEmail().hasError('email')\">\r\n                    No es un email valido\r\n                </p>\r\n            </div>\r\n            <div *ngIf=\"getPassword().errors && getPassword().touched\">\r\n                <p *ngIf=\"getPassword().hasError('required')\">\r\n                    Contraseña requerida\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n   </div>\r\n\r\n    <button type=\"submit\" (click)=\"addUser()\" >Agregar</button>\r\n    <button type=\"button\" (click)=\"addForm.reset()\">Cancelar</button>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<header>\r\n  <div class=\"header-title\">\r\n      <h1>BURGUER QUEEN</h1>\r\n  </div>\r\n  <!-- <div>\r\n      <app-user-logged></app-user-logged>\r\n  </div> -->\r\n</header>\r\n","import { Component, OnInit, OnDestroy, ErrorHandler } from '@angular/core';\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\n\r\nexport class LoginComponent implements OnInit,OnDestroy {\r\n  errorMessage: string=null;\r\n  tok:string;\r\n   auth: Subscription = null;\r\n  constructor(private router:Router, private auth$: AuthService) {}\r\n\r\n  form = new FormGroup({\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n    password: new FormControl('', [Validators.required])\r\n  });\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n  getEmail() {\r\n    return this.form.get('email')\r\n  }\r\n\r\n  getPassword() {\r\n    return this.form.get('password')\r\n  }\r\n\r\n  authUser(): void {\r\n    const mail = this.form.value.email;\r\n    if (this.form.valid) {\r\n      this.auth = this.auth$.getToken(this.form.value).subscribe((resp) => {\r\n        if (resp.status >= 200) {\r\n          this.tok = resp.body.token;\r\n\r\n            this.auth$.getUser(mail, this.tok).subscribe((resp) => {\r\n              const role = resp.roles.admin;\r\n              const authUser = {\r\n                'token': this.tok,\r\n                'email': resp.email,\r\n                'role': role,\r\n                'id': resp._id\r\n                };\r\n              localStorage.setItem('usuario', JSON.stringify(authUser));\r\n              if (resp != undefined) {\r\n                role ? this.router.navigate(['/admin']) : this.router.navigate(['/mesero']);\r\n              } else {\r\n                localStorage.removeItem('usuario');\r\n                this.errorMessage= 'este usuario no existe';\r\n              }\r\n            },\r\n            // (err) => console.log(err),\r\n            // () => {\r\n            //   console.log(\"observable complete\")\r\n            // }\r\n            );\r\n        }\r\n      }, err => {\r\n        if(err.status === 403) {\r\n          return this.errorMessage = 'La contraseña es incorrecta';\r\n        }\r\n        console.log('3',err)\r\n        return this.errorMessage = 'Este usuario no existe';\r\n      });\r\n\r\n    }else{\r\n\r\n      this.form.markAllAsTouched()\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.auth.unsubscribe();\r\n  }\r\n\r\n}\r\n","\r\n<section class=\"container-login\">\r\n  <article class=\"container-login-form\">\r\n      <h2>Iniciar Sesión</h2>\r\n          <form [formGroup]=\"form\">\r\n\r\n                      <label for=\"email\">Email</label>\r\n                  <div class=\"container-login-form-input\">\r\n                      <input formControlName=\"email\" type=\"email\" class=\"form-control\" required>\r\n                  </div>\r\n\r\n\r\n                      <label for=\"password\">Password</label>\r\n                       <div class=\"container-login-form-input\">\r\n                      <input formControlName=\"password\" type=\"password\" class=\"form-control\" required>\r\n                  </div>\r\n\r\n              <div class=\"validations\">\r\n                  <div *ngIf=\"getEmail().errors && getEmail().touched\">\r\n                      <p *ngIf=\"getEmail().hasError('email')\">\r\n                          No es un email valido\r\n                      </p>\r\n                      <p *ngIf=\"getEmail().hasError('required')\">\r\n                        Email requerido\r\n\r\n                    </p>\r\n                  </div>\r\n                  <div *ngIf=\"getPassword().errors && getPassword().touched\">\r\n                      <p *ngIf=\"getPassword().hasError('required')\">\r\n                          Contraseña requerida\r\n                      </p>\r\n                  </div>\r\n                  <div *ngIf=\"errorMessage \">\r\n                          <p >\r\n                              {{errorMessage}}\r\n                          </p>\r\n                      </div>\r\n              </div>\r\n             <div class=\"button-confirm\">\r\n                  <button class=\"btn\" type=\"submit\" (click)=\"authUser()\">Ingresar</button>\r\n             </div>\r\n          </form>\r\n  </article>\r\n  </section>\r\n","import { Component, OnInit, Input, Output } from '@angular/core';\r\nimport { JsonApiService } from 'src/app/services/JsonApiService.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n// import { ReactiveFormsModule } from '@angular/forms';\r\n// import { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.scss']\r\n})\r\nexport class ModalComponent implements OnInit {\r\n  @Input() show = false;\r\n  @Input() customClass = '';\r\n  @Input() closeCallback = () => (false);\r\n\r\n  @Input() set contacto(valor) {\r\n    this.crearForm();\r\n    if (valor) {\r\n      this.contactOriginal = valor;\r\n      this.editForm.patchValue({\r\n        email: valor.email,\r\n        password: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  editForm: FormGroup;\r\n  contactOriginal: any;\r\n\r\n  constructor(private json: JsonApiService, private fb: FormBuilder){\r\n    this.crearForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  crearForm() {\r\n    this.editForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required]],\r\n    })\r\n  }\r\n  onGuardar() {\r\n    const user = {\r\n      \"email\": this.editForm.value.email,\r\n      \"password\": this.editForm.value.password,\r\n      \"roles\": {\r\n        \"admin\": false\r\n      }\r\n    }\r\n\r\n    if(this.editForm.valid){\r\n      this.json.putUser(user, this.contactOriginal.email).subscribe()\r\n    }\r\n\r\n  }\r\n}\r\n","<div  [ngClass]=\"customClass || ''\" class=\"modal\" [ngStyle]=\"{display: show ? 'block' : 'none'}\">\r\n  <div class=\"overlay\" (click)=\"closeCallback()\"></div>\r\n  <div class=\"modal_content\">\r\n  <div class=\"ctn-edit-user\" >\r\n      <div class=\"img-container\">\r\n        <img src=\"assets/images/BQ.png\" alt=\"\">\r\n      </div>\r\n      <h2>Editar Usuario</h2>\r\n      <form class=\"form\" [formGroup]=\"editForm\" (ngSubmit)=\"onGuardar()\">\r\n          <input type=\"text\" placeholder=\"email\" name=\"email\" formControlName=\"email\">\r\n          <input type=\"text\" placeholder=\"constraseña\" #passw formControlName=\"password\">\r\n        <div class=\"cancel-save\">\r\n          <button type='button' class=\"cancel\" (click)=\"passw.value=''\" (click)=\"closeCallback()\">Cancelar</button>\r\n          <button type='submit' class=\"save\" (click)=\"passw.value=''\" (click)=\"closeCallback()\">Guardar</button>\r\n        </div>\r\n      </form>\r\n  </div>\r\n\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { OrdersService } from \"../../services/orders/orders.service\";\r\nimport { Order } from 'src/app/model/order';\r\nimport { Router} from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-order-list',\r\n  templateUrl: './order-list.component.html',\r\n  styleUrls: ['./order-list.component.scss']\r\n})\r\nexport class OrderListComponent implements OnInit,OnDestroy {\r\n  orders: Order[];\r\n  showMoveButton: boolean = false;\r\n  showCancelButton: boolean = false;\r\n @Input() statusOrder: string;\r\n  orderSuscription: Subscription;\r\n  orderUpdateSuscription: Subscription;\r\n  orderDeleteSuscription: Subscription;\r\n  public orderEdit: any;\r\n  public productsProduct: any;\r\n  public arrayProducts: any;\r\n  public productQty: any;\r\n\r\n  constructor(private orders$:OrdersService, private router: Router) { }\r\n\r\n  getOrders() {\r\n   this.orderSuscription= this.orders$.getListOrders().subscribe((data: Order[])=>{\r\n     this.orders = data;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.orders$.refresh$.subscribe(() => {\r\n      this.getOrders();\r\n    });\r\n    this.getOrders();\r\n    this.showHideButtons();\r\n  }\r\n\r\n  showHideButtons(){\r\n    this.showMoveButton = this.router.url == '/mesero/states' && (this.statusOrder == 'pending'|| this.statusOrder == 'delivering');\r\n    this.showCancelButton = this.router.url == '/mesero/states' && this.statusOrder == 'pending';\r\n  }\r\n\r\n  changeStatus(order:Order) {\r\n    this.arrayProducts = order.products.map(product => {\r\n      this.productsProduct = {\r\n        productId : product.product._id,\r\n        qty: product.qty,\r\n      };\r\n      return this.productsProduct;\r\n    });\r\n\r\n    if (order.status == 'pending') {\r\n      order.status = 'delivering';\r\n    } else if (order.status == 'delivering') {\r\n      order.status = 'delivered';\r\n    }\r\n    this.orderEdit = {\r\n      userId: order.userId,\r\n      client: order.client,\r\n      products: this.arrayProducts,\r\n      status: order.status\r\n    }\r\n\r\n    this.orderUpdateSuscription =  this.orders$.updateOrder(this.orderEdit, order._id).subscribe()\r\n\r\n\r\n    this.orderEdit = {\r\n      userId: order.userId,\r\n      client: order.client,\r\n      products: this.arrayProducts,\r\n      status: order.status\r\n    }\r\n\r\n    this.orderUpdateSuscription =  this.orders$.updateOrder(this.orderEdit, order._id).subscribe()\r\n  }\r\n\r\n  removeOrder(order: Order) {\r\n    this.orderDeleteSuscription= this.orders$.deleteOrder(order._id).subscribe()\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.orderSuscription.unsubscribe();\r\n\r\n    (this.orderUpdateSuscription)?this.orderUpdateSuscription.unsubscribe():null;\r\n    (this.orderDeleteSuscription)?this.orderDeleteSuscription.unsubscribe():null\r\n  }\r\n\r\n}\r\n","<div class=\"container-order-list\">\r\n  <ng-container>\r\n    <div class=\"order-card\" *ngFor=\"let order of orders | filter: statusOrder; index as i\">\r\n      <div class=\"users\">\r\n        <div class=\"client-date\">\r\n          <span class=\"client\">{{order.client}}</span>\r\n          <span class=\"date\"><i class=\"far fa-clock\"></i>15:22</span>\r\n        </div>\r\n        <!-- <span>{{order.userId}}</span> -->\r\n      </div>\r\n      <div class=\"products\" *ngFor=\"let product of order.products\">\r\n        <span class=\"name\">{{product.product.name}}</span>\r\n        <span class=\"qty\">{{product.qty}}</span>\r\n        <span class=\"price\">{{product.product.price}}</span>\r\n      </div>\r\n      <button class=\"move\" *ngIf=\"showMoveButton\" (click)=\"changeStatus(order)\"><i class=\"fas fa-angle-double-right\"></i> Mover pedido</button>\r\n      <button class=\"cancel\" *ngIf=\"showCancelButton\" (click)=\"removeOrder(order)\"><img src=\"assets/images/delete.png\" alt=\"\"> Cancelar pedido</button>\r\n    </div>\r\n  </ng-container>\r\n\r\n\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { OrdersService } from '../../services/orders/orders.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-order-send',\r\n  templateUrl: './order-send.component.html',\r\n  styleUrls: ['./order-send.component.scss']\r\n})\r\nexport class OrderSendComponent implements OnInit,OnDestroy {\r\n  products = [];\r\n  total: number;\r\n  form: FormGroup;\r\n  confirmation: boolean = false;\r\n  public user: any = JSON.parse(localStorage.getItem(('usuario')));\r\n  public objProd: any;\r\n  public orderTotal: any;\r\n  public productsProduct: any;\r\n  public productQty: any;\r\n  public arrayProducts: any;\r\n  orderSuscription: Subscription=null;\r\n  orderSendSuscription: Subscription=null;\r\n\r\n  constructor(private orders$ : OrdersService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.listenAddProduct();\r\n    this.buildForm();\r\n  }\r\n\r\n  listenAddProduct() {\r\n    this.orderSuscription = this.orders$.buttonAddClickEventTrack.subscribe(event => {\r\n      this.objProd = this.orders$.getObjectOrderProduct();\r\n      let exist = this.products.some(item => item._id == this.objProd._id);\r\n      if (!exist) {\r\n        this.objProd.qty = 1;\r\n        this.products.push(this.objProd);\r\n        this.totalBill();\r\n      }\r\n    });\r\n  }\r\n\r\n  plus(id: string) {\r\n    this.products.filter(obj => obj.id == id)[0].qty += 1;\r\n    this.totalBill();\r\n  }\r\n\r\n  minus( id: string) {\r\n    const qtyActual = this.products.filter(obj => obj.id == id)[0].qty;\r\n    if(qtyActual > 1) {\r\n      this.products.filter(obj => obj.id == id)[0].qty -= 1;\r\n    }\r\n    this.totalBill();\r\n  }\r\n\r\n  private buildForm() {\r\n    this.form = new FormGroup({\r\n      client: new FormControl('', [Validators.required])\r\n    })\r\n  }\r\n\r\n  getClient() {\r\n    return this.form.get('client');\r\n  }\r\n\r\n  trash(id: string) {\r\n    const index = this.products.findIndex(item => item.id == id);\r\n    this.products.splice(index, 1);\r\n    this.totalBill();\r\n  }\r\n\r\n  createOrderFood() {\r\n    this.arrayProducts = this.products.map(product => {\r\n      this.productsProduct = {\r\n        productId : product._id,\r\n        qty: product.qty,\r\n      };\r\n      return this.productsProduct;\r\n    });\r\n\r\n    this.orderTotal = {\r\n      userId: this.user.id,\r\n      client: this.form.value.client,\r\n      products: this.arrayProducts,\r\n     };\r\n\r\n    return this.orderTotal;\r\n  }\r\n\r\n  sendOrder() {\r\n    if(this.form.valid) {\r\n      this.orderSendSuscription = this.orders$.postOrder(this.createOrderFood()).subscribe((data: any) => {\r\n      this.form.reset();\r\n      this.confirmation = false;\r\n      this.cleanList();\r\n    });\r\n    } else {\r\n      this.confirmation = true;\r\n    }\r\n  }\r\n\r\n  cleanList() {\r\n    this.total = 0;\r\n    this.products = [];\r\n  }\r\n\r\n  totalBill() {\r\n    this.total = this.products.reduce((acc, obj) => acc + (obj.price * obj.qty), 0);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.orderSuscription.unsubscribe();\r\n    if( this.orderSendSuscription){\r\n      this.orderSendSuscription.unsubscribe();\r\n     }\r\n  }\r\n\r\n}\r\n","<div class=\"order\">\r\n  <header class=\"head\">\r\n      <div class=\"ctn-table\" [formGroup]=\"form\">\r\n        <h2>Cliente</h2>\r\n        <div class=\"table\">\r\n          <input type=\"client\" placeholder=\"Ingresa nombre\" formControlName=\"client\">\r\n          <p *ngIf=\"confirmation\"><span>Debes ingresar nombre</span></p>\r\n        </div>\r\n      </div>\r\n  </header>\r\n    <div class=\"body-order\">\r\n        <div class=\"each-order\" *ngFor=\"let product of products\">\r\n            <div class=\"prod\">\r\n                <h3>{{product.name}}</h3>\r\n                <div class=\"detail\">\r\n                  <h4>s/ <span>{{product.price}}</span></h4>\r\n                  <h4 class=\"qty\">x <span>{{product.qty}}</span></h4>\r\n                </div>\r\n            </div>\r\n            <div class=\"count\">\r\n                <i class=\"fas fa-plus-circle\" (click)=\"plus(product.id)\"></i>\r\n                <i class=\"fas fa-minus-circle\" (click)=\"minus(product.id)\"></i>\r\n            </div>\r\n            <div class=\"price\">\r\n                <h2>s/ <span>{{product.price * product.qty}}</span></h2>\r\n            </div>\r\n            <i class=\"fas fa-trash-alt\" (click)=\"trash(product.id)\"></i>\r\n          </div>\r\n    </div>\r\n    <div class=\"bill\">\r\n        <div class=\"total\">\r\n            <h3>Total</h3>\r\n            <h2>S/<span>{{total}}</span></h2>\r\n        </div>\r\n        <div class=\"buttons\">\r\n            <button class=\"order-action\" (click)=\"sendOrder()\">Ordenar</button>\r\n            <button class=\"delete\" (click)=\"cleanList()\">Eliminar</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter, TemplateRef, ViewChild, OnChanges } from '@angular/core';\r\nimport { ProductsService } from \"../../services/products.service\";\r\nimport { OrdersService } from '../../services/orders/orders.service';\r\nimport { Product } from 'src/app/model/products';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-products-list',\r\n  templateUrl: './products-list.component.html',\r\n  styleUrls: ['./products-list.component.scss'],\r\n})\r\nexport class ProductsListComponent implements OnInit {\r\n\r\n  @Output() editar = new EventEmitter<object>()\r\n\r\n  products: Product[]\r\n  popoverTitle = 'Eliminar';\r\n  popoverMessage = '¿Desea eliminar este producto?';\r\n  showModal = false;\r\n  showAddButton: boolean = false;\r\n  filterProd: string = 'breakfast'\r\n  show: string;\r\n  path: any;\r\n  buttons: boolean = null;\r\n  public productOrder: object;\r\n  productsSuscription: Subscription=null;\r\n\r\n  constructor(private product$: ProductsService, private order$: OrdersService, private route: ActivatedRoute, private router: Router) {\r\n    this.path = route.snapshot.routeConfig.path;\r\n    this.buttons = (this.path === 'inventario') ? true : false\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.productsSuscription =this.product$.refresh$.subscribe(() => {\r\n      this.getProducts()\r\n    })\r\n   this.getProducts();\r\n    this.showAddButton = this.router.url == '/mesero/orders';\r\n  }\r\n\r\n  buttonAdd(product: any) {\r\n    this.productOrder = product;\r\n    this.sendObjProd(this.productOrder);\r\n    this.order$.buttonAddClickEventTrack.next(event);\r\n  }\r\n\r\n  sendObjProd (product: object) {\r\n    this.order$.setObjectOrderProduct(product);\r\n  }\r\n\r\n  getProducts() {\r\n    this.product$.getListProducts().subscribe((data) => {\r\n      this.products = data;\r\n    })\r\n  }\r\n  lessProduct(product) {\r\n    this.product$.deleteProduct(product).subscribe(dat => {\r\n      this.products = this.products.filter(prod => prod._id != product.id)\r\n    })\r\n  }\r\n\r\n  editProduct(product: any) {\r\n    this.editar.emit(product)\r\n  }\r\n\r\n\r\n  filterType(type: string) {\r\n    switch (type) {\r\n      case 'breakfast':\r\n        this.show = '';\r\n        this.filterProd = type\r\n        break;\r\n      case 'lunch':\r\n        this.show = \"lunch\"\r\n        this.filterProd = 'hamburguer';\r\n        break;\r\n      default:\r\n        this.show = \"lunch\";\r\n        this.filterProd = type\r\n        break;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.productsSuscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"buttons\">\r\n       <div class=\"container-menu-main\">\r\n           <button class=\"menu-main no-selected\"\r\n\r\n           (click)=\"filterType('breakfast')\"\r\n           >Desayunos</button>\r\n           <button class=\"menu-main no-selected\" (click)=\"filterType('lunch')\" >Almuerzo/Cena</button>\r\n\r\n       </div>\r\n       <div *ngIf=\"show=='lunch'\">\r\n           <button class=\"menu-child no-selected\"\r\n\r\n           (click)=\"filterType('hamburguer')\">Hamburguesas</button>\r\n           <button class=\"menu-child no-selected\"\r\n\r\n           (click)=\"filterType('accompaniment')\">Acompañamientos</button>\r\n           <button class=\"menu-child no-selected\"\r\n\r\n           (click)=\"filterType('drink')\">Para tomar</button>\r\n       </div>\r\n  </div>\r\n   <div class=\"panel-cards\">\r\n       <div class=\"card-product\" *ngFor=\"let item of products | filter: filterProd \">\r\n           <i *ngIf=\"showAddButton\" class=\"fas fa-plus-circle\" (click)=\"buttonAdd(item)\"></i>\r\n           <div class=\"card-img\">\r\n               <img src={{item.image}} alt=\"\">\r\n           </div>\r\n           <div class=\"card-text\">\r\n               <h3>{{item.name}}</h3>\r\n               <h4>S/ {{item.price}}</h4>\r\n           </div>\r\n           <div class=\"btn-options\" *ngIf=\"buttons\">\r\n               <button class=\"edit\"(click)=\"editProduct(item)\" (click)=\"editProp=true\">\r\n                   <img src=\"assets/images/edit.png\" alt=\"\">Editar\r\n               </button>\r\n\r\n               <button class=\"delete\" mwlConfirmationPopover [popoverTitle]=\"popoverTitle\"\r\n                   [popoverMessage]=\"popoverMessage\" placement=\"left\" (confirm)=\"lessProduct(item)\"\r\n                   (cancel)=\"cancelClicked = true\" popoverClass=\"popup\"> Eliminar\r\n               </button>\r\n           </div>\r\n       </div>\r\n   </div>\r\n\r\n</div>\r\n","\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { JsonApiService } from '../../services/JsonApiService.service';\r\nimport { User } from '../../model/user'\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-staff-list',\r\n  templateUrl: './staff-list.component.html',\r\n  styleUrls: ['./staff-list.component.scss']\r\n})\r\nexport class StaffList implements OnInit, OnDestroy {\r\n\r\n  contactoeditar: null;\r\n  contacto: null;\r\n  data: Subscription=null;\r\n  users: User[];\r\n  email: string;\r\n\r\n  //modal\r\n  showModal = false;\r\n  toggleModal = () => {\r\n    this.showModal = !this.showModal;\r\n  }\r\n  // confirmacion de eliminar\r\n  popoverTitle = 'Eliminar';\r\n  popoverMessage = 'Desea eliminar este usuario?';\r\n  confirmClicked = false;\r\n  cancelClicked = false;\r\n  user = JSON.parse(localStorage.getItem(('usuario')));\r\n\r\n  //variable que almacena errores\r\n  errorMessage: string = 'default'\r\n\r\n  // encontrar solo empleados\r\n  findEmployer = (employer: User): boolean => employer.roles.admin === false;\r\n\r\n  //traer usuarios\r\n  receiveUsers() {\r\n    return this.json.getUser().subscribe((data: User[]) => {\r\n\r\n      this.users = data.filter(this.findEmployer)\r\n    }, err => {\r\n        switch (err.status) {\r\n          case 401: this.errorMessage = 'no hay cabecera de autenticación'\r\n            break;\r\n          case 403: this.errorMessage = 'no es admin'\r\n            break;\r\n          default: this.errorMessage = 'se produjo un error, intente de nuevo'\r\n            break;\r\n        }\r\n      })\r\n  }\r\n\r\n  //eliminar un usuario\r\n  lessUser(email): void {\r\n    this.json.deleteUser(email).subscribe((response: any) => {\r\n      this.users = this.users.filter(e => e.email !== email);\r\n    },\r\n      err => {\r\n        switch (err.status) {\r\n          case 401:\r\n            this.errorMessage = 'no hay cabecera de autenticación'\r\n            break;\r\n          case 403:\r\n            this.errorMessage = 'ya existe usuaria con ese `email`'\r\n            break;\r\n          case 404:\r\n            this.errorMessage = 'usuario no encontrado'\r\n            break;\r\n          default:\r\n            this.errorMessage = 'se produjo un error, intente de nuevo'\r\n            break;\r\n        }\r\n\r\n      })\r\n  }\r\n\r\n  constructor(private json: JsonApiService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.json.refreshList$.subscribe(() => {\r\n        this.receiveUsers();  \r\n      });\r\n    this.data = this.receiveUsers()\r\n  }\r\n\r\n  onEditar(cont) {\r\n    this.contactoeditar = cont\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.data.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"table-staff\">\r\n  <table class=\"table\" *ngIf=\"errorMessage == 'default'; else errorView\">\r\n    <thead>\r\n      <tr class=\"titles\">\r\n        <th class=\"num\">N° </th>\r\n        <th>Email</th>\r\n        <th>opciones</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let details of users; index as i\">\r\n        <td>{{i+1}}</td>\r\n        <td #valor>{{details.email}}</td>\r\n        <td class=\"edit-delete\">\r\n          <button class=\"edit\"\r\n          (click)=\"toggleModal()\"\r\n         (click)=\"onEditar(details)\" >\r\n\r\n            <img src=\"assets/images/edit.png\" alt=\"\"> <a>\r\n          Editar</a>\r\n          </button>\r\n          <button class=\"delete\" mwlConfirmationPopover [popoverTitle]=\"popoverTitle\" [popoverMessage]=\"popoverMessage\"\r\n            placement=\"left\" (confirm)=\"lessUser(details.email,valor)\" (cancel)=\"cancelClicked = true\"\r\n            popoverClass=\"popup\">\r\n            <img src=\"assets/images/delete.png\" alt=\"\">\r\n            Eliminar\r\n          </button>\r\n        </td>\r\n\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<div class=\"app\">\r\n  <app-modal [show]=\"showModal\" [customClass]=\"'custom_modal_class'\" [closeCallback]=\"toggleModal\" [contacto]=\"contactoeditar\" >\r\n  </app-modal>\r\n</div>\r\n<ng-template #errorView>\r\n  <div class=\"squareError\">\r\n    <h3>{{errorMessage}}</h3>\r\n    <button (click)=\"errorMessage = 'default'\">Regresar</button>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRouteSnapshot, ActivatedRoute,NavigationEnd } from '@angular/router';\r\nimport {filter} from 'rxjs/operators';\r\n@Component({\r\n  selector: 'app-vertical-menu',\r\n  templateUrl: './vertical-menu.component.html',\r\n  styleUrls: ['./vertical-menu.component.scss']\r\n})\r\nexport class VerticalMenuComponent implements OnInit {\r\nmenuAdmin:any[] = [\r\n{\r\n  title: 'Admin',\r\n  icon:'fas fa-user-cog',\r\n  href: '/admin/staff'\r\n},\r\n{\r\n  title: 'Mesero',\r\n  icon:'fas fa-user-tie',\r\n  href: '/mesero/orders'\r\n},\r\n// {\r\n//   title: 'Jefe de cocina',\r\n//   icon:'fas fa-bread-slice',\r\n//   href: '/cocinero'\r\n// }\r\n]\r\ncurrentUrl: any;\r\ndesactivado:boolean=false;\r\n  dato: string;\r\n\r\n  constructor(public router: Router) {\r\n   router.events.pipe(filter(event => event instanceof NavigationEnd))\r\n        .subscribe(event => {\r\n            this.currentUrl = Object.values(event)[1];\r\n        });\r\n} ;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  changeImage(){\r\n    this.desactivado = !this.desactivado\r\n\r\n  }\r\n  onLogout(){\r\n    localStorage.clear();\r\n    \r\n    window.location.reload()\r\n  }\r\n}\r\n","<aside>\r\n  <div class='logo'>\r\n      <img src=\"../../../assets/images/BQ.png\" alt=\"logoBQ\">\r\n  </div>\r\n  <div class='icons' *ngFor=\"let option of menuAdmin\">\r\n     <div class='each-icon' (click)='changeImage()'>\r\n          <a routerLink={{option.href}} routerLinkActive=\"active\">\r\n              <i class={{option.icon}}></i>\r\n              <h2>{{option.title}}</h2>\r\n          </a>\r\n     </div>\r\n\r\n </div>\r\n <div class='icon-logout' (click)='onLogout()'>\r\n      <a routerLink='/' routerLinkActive=\"\">\r\n          <i class='fa fa-sign-out'></i>\r\n          <h2>Salir</h2>\r\n      </a>\r\n  </div>\r\n\r\n</aside>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, RouterStateSnapshot, ActivatedRouteSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\nuserObject: any;\r\nconstructor( private router: Router){\r\n\r\n}\r\n\r\n  canActivate(\r\n  next: ActivatedRouteSnapshot,\r\n  state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      this.userObject = JSON.parse(localStorage.getItem('usuario'));\r\n      if(this.userObject == undefined) {\r\n        this.router.navigate(['/']);\r\n          return false;\r\n      }\r\n      return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleGuard implements CanActivate {\r\n  userObject: any;\r\n  constructor(private router: Router){\r\n\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): boolean {\r\n    const expectedRole = route.data.expectedRole;\r\n    this.userObject = JSON.parse(localStorage.getItem('usuario'));\r\n    if (this.userObject['role'] !== expectedRole) {\r\n      this.router.navigate(['/mesero']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class filterPipe implements PipeTransform {\r\n\r\n  transform(value: Array<any>, arg: string): Array<any> {\r\n    const result = [];\r\n    if (value != undefined) {\r\n      for (let item of value) {\r\n        (item.type === arg || item.status === arg) ? result.push(item):null;\r\n      }\r\n    }\r\n   return result; \r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpClient, HttpHeaders, HttpErrorResponse,\r\n} from '@angular/common/http';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\nimport { throwError, Observable, Subject } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../model/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class JsonApiService {\r\n  user = JSON.parse(localStorage.getItem(('usuario')));\r\n\r\n  // token:string = this.user;\r\n  // headers = new HttpHeaders(\r\n  //   {\r\n  //     'Authorization': 'Bearer ' + this.token,\r\n  //     // 'Content-Type': 'application/json'\r\n  //   })\r\n\r\n  public url: string = environment.apiUrl + 'users/';\r\n  private _refreshList$ = new Subject<void>();\r\n  public refreshList$ = this._refreshList$.asObservable();\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n  getUser() {\r\n    return this.http.get(this.url, { headers: { Authorization: `Bearer ${this.user.token}` } }).pipe(catchError(this.handleError))\r\n  }\r\n\r\n  getUserId(id:string) {\r\n    return this.http.get(this.url + id, { headers: { Authorization: `Bearer ${this.user.token}` }}).pipe(catchError(this.handleError))\r\n  }\r\n\r\n  putUser(user: any, email: string) {\r\n    return this.http.put(this.url + email, (user), { headers: { Authorization: `Bearer ${this.user.token}` }, observe: 'response' }).pipe(\r\n        tap(() => {\r\n          this._refreshList$.next();\r\n        })\r\n    )\r\n  }\r\n\r\n  postUser(body: object) {\r\n    return this.http.post(this.url, (body), { headers: { Authorization: `Bearer ${this.user.token}` }, observe: 'response' }).pipe(\r\n        catchError(this.handleError),\r\n        tap(() => {\r\n          this._refreshList$.next();\r\n        })\r\n      )\r\n  }\r\n\r\n  deleteUser(email: string) {\r\n    return this.http.delete(this.url + email, { headers: { Authorization: `Bearer ${this.user.token}` } }).pipe(\r\n        tap(resp => resp),\r\n        catchError(this.handleError),\r\n        tap(() => {\r\n          this._refreshList$.next();\r\n        })\r\n      )\r\n  }\r\n\r\n  handleError(errorRes: HttpErrorResponse) {\r\n    if (errorRes.error instanceof ErrorEvent) { //boolean que da el tipo de error\r\n      return throwError('error lado del cliente: ' + errorRes.error.message)// error lado del cliente\r\n    } else {\r\n      return throwError({// error lado del servidor\r\n        status: errorRes.status,\r\n        statusText: errorRes.statusText,\r\n        message: errorRes.message,\r\n      })\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  public url: string = environment.apiUrl\r\n private userSubject : BehaviorSubject<any> = new BehaviorSubject<any>(localStorage.getItem('usuario'));\r\n  user : Observable<any>= this.userSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    // this.url = environment.apiUrl;\r\n    // this.userSubject = new BehaviorSubject<any>(localStorage.getItem('usuario'));\r\n    // this.user = this.userSubject.asObservable();\r\n  }\r\n\r\n  getToken(data: any) {\r\n    return this.http.post<any>(`${this.url}auth`, data , { observe: 'response' });\r\n  };\r\n\r\n  getUser(email:string, token: string) {\r\n    return this.http.get<any>(`${this.url}users/${email}`, { headers: { Authorization: `Bearer ${token}` } });\r\n  };\r\n\r\n  // postUserLogin(body: object): Observable<any> {\r\n  //   return this.http.post(`${this.url}auth`, body, { observe: 'response' })\r\n  //     .pipe(map(userLogged => {\r\n  //       localStorage.setItem('usuario', userLogged['token']);\r\n  //       this.userSubject.next(body);\r\n  //         return userLogged;\r\n  //     }))\r\n  // }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class OrdersService {\r\n  user = JSON.parse(localStorage.getItem(('usuario')));\r\n  public objectOrderProduct: object;\r\n  token:string =JSON.parse(localStorage.getItem('usuario'));\r\n\r\n  setObjectOrderProduct(product: object) {\r\n    this.objectOrderProduct = product;\r\n  }\r\n\r\n  getObjectOrderProduct() {\r\n    return this.objectOrderProduct;\r\n  }\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n  public url: string = environment.apiUrl + 'orders/';\r\n  private subjectSource = new Subject<void>();\r\n  public countdown$ = this.subjectSource.asObservable();\r\n\r\n  public buttonAddClickEventTrack = new Subject();\r\n\r\n  headers = new HttpHeaders(\r\n    {\r\n      'Authorization': 'Bearer ' + this.token,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  );\r\n\r\n  get refresh$() {\r\n    return this.subjectSource;\r\n  }\r\n\r\n  getListOrders(){\r\n    return this.http.get(`${this.url}`, { headers: { Authorization: `Bearer ${this.user.token}` } });\r\n  }\r\n\r\n  updateOrder(order: any, id: string) {\r\n    return this.http.put(this.url + id, order, { headers: { Authorization: `Bearer ${this.user.token}` }})\r\n    .pipe(\r\n      tap(data => data),\r\n      tap(() => {\r\n        this.refresh$.next();\r\n      })\r\n    )\r\n  }\r\n\r\n  postOrder(order: object): Observable<any> {\r\n    return this.http.post(this.url, (order), { headers: { Authorization: `Bearer ${this.user.token}` } })\r\n      .pipe(\r\n        tap(()=> {\r\n          this.refresh$.next();\r\n        })\r\n      )\r\n  }\r\n\r\n  deleteOrder(id: string) {\r\n    return this.http.delete(`${this.url}${id}`, { headers: { Authorization: `Bearer ${this.user.token}` } }).pipe(\r\n      tap(() => {\r\n        this.refresh$.next();\r\n      })\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { environment } from \"../../environments/environment\";\r\nimport { BehaviorSubject, Observable, throwError, Subject } from 'rxjs';\r\nimport { Product } from '../model/products';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { renderFlagCheckIfStmt } from '@angular/compiler/src/render3/view/template';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n  user = JSON.parse(localStorage.getItem(('usuario')));\r\n\r\n  // token:string =JSON.parse(localStorage.getItem('usuario'));\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n  public url: string = environment.apiUrl + 'products/';\r\n  private subjectSource = new Subject<void>();\r\n  public countdown$ = this.subjectSource.asObservable();\r\n\r\n  // headers = new HttpHeaders(\r\n  //   {\r\n  //     'Authorization': 'Bearer '+ this.token,\r\n  //     'Content-Type': 'application/json'\r\n  //   })\r\n\r\n  get refresh$(){\r\n    return this.subjectSource\r\n  }\r\n\r\n\r\n  getListProducts(): Observable<any> {\r\n    return this.http.get(this.url, { headers: { Authorization: `Bearer ${this.user.token}` } });\r\n  }\r\n\r\n  postProduct(product: object): Observable<any> {\r\n    return this.http.post(this.url, product, { headers: { Authorization: `Bearer ${this.user.token}` } })\r\n      .pipe(\r\n        tap(() => {\r\n          this.refresh$.next()\r\n        }),\r\n        catchError(this.handleError),\r\n      )\r\n  }\r\n\r\n  updateProduct(body: any, id: string) {\r\n    return this.http.put(this.url + id, body, { headers: { Authorization: `Bearer ${this.user.token}` } })\r\n      .pipe(\r\n        tap(data => data),\r\n        tap(() => {\r\n          this.refresh$.next()\r\n        }),\r\n      catchError(this.handleError),\r\n      )\r\n  }\r\n\r\n  deleteProduct(product: any) {\r\n    return this.http.delete(this.url + product._id, { headers: { Authorization: `Bearer ${this.user.token}` } })\r\n      .pipe(\r\n        catchError(this.handleError),\r\n        tap(() => {\r\n          this.refresh$.next()\r\n        })\r\n      )\r\n  }\r\n\r\n  handleError(errorRes: HttpErrorResponse) {\r\n    return throwError({\r\n      status: errorRes.status,\r\n      statusText: errorRes.statusText,\r\n      message: errorRes.message,\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"main-container\">\r\n  <div class=\"container-admin-options\">\r\n    <div class=\"admin-options\">\r\n      <div class=\"option\">\r\n        <a [routerLink]=\"['/admin/staff']\" routerLinkActive=\"active\">\r\n          <i class=\"fas fa-users\"></i>\r\n          <h2>Staff</h2>\r\n        </a>\r\n      </div>\r\n      <div class=\"option\">\r\n        <a [routerLink]=\"['/admin/inventario']\" routerLinkActive=\"active\">\r\n          <i class=\"fas fa-clipboard-list\"></i>\r\n          <h2>Inventario</h2>\r\n        </a>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ProductsService } from 'src/app/services/products.service';\r\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-view-inventary',\r\n  templateUrl: './view-inventary.component.html',\r\n  styleUrls: ['./view-inventary.component.scss']\r\n})\r\nexport class ViewInventaryComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  confirmation: boolean = false;\r\n  editProp: boolean = false;\r\n  prod = null\r\n  prodEditar = null\r\n  productId: string = null\r\n  productImg: string = null\r\n\r\n  constructor(private product$: ProductsService) {\r\n    this.buildForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  private buildForm() {\r\n    this.form = new FormGroup({\r\n      name: new FormControl('', [Validators.required]),\r\n      price: new FormControl('', [Validators.required]),\r\n      image: new FormControl('', []),\r\n      type: new FormControl('', [Validators.required]),\r\n      dateEntry: new FormControl('', [Validators.required]),\r\n    })\r\n  }\r\n\r\n  addProduct() {\r\n    if (this.form.valid) {\r\n      const newUser: object = {\r\n        \"name\": this.form.value.name,\r\n        \"price\": this.form.value.price,\r\n        \"image\": \"assets/images/BQ.png\",\r\n        \"type\": this.form.value.type,\r\n        \"dateEntry\": this.form.value.dateEntry,\r\n      };\r\n      this.product$.postProduct(newUser).subscribe((data: any) => {\r\n        this.form.reset();\r\n        this.confirmation = false\r\n      })\r\n    } else {\r\n      this.confirmation = true\r\n    };\r\n  }\r\n\r\n  editProduct(product: any) {\r\n    this.editProp = true\r\n    this.productId = product._id\r\n    this.productImg = product.image\r\n    this.form.patchValue({\r\n      name: product.name,\r\n      price: product.price,\r\n    })\r\n  }\r\n\r\n  saveEdition() {\r\n    if (this.productId !== null) {\r\n      const newProduct = {\r\n        \"name\": this.form.value.name,\r\n        \"price\": this.form.value.price,\r\n        \"image\": this.productImg,\r\n        \"type\": this.form.value.type,\r\n        \"dateEntry\": this.form.value.dateEntry,\r\n      }\r\n\r\n      if (this.form.valid) {\r\n        this.product$.updateProduct(newProduct, this.productId).subscribe((dat) => {\r\n          this.editProp = false;\r\n          this.form.reset();\r\n          this.confirmation = false;\r\n        })\r\n      } else {\r\n        this.confirmation = true\r\n      }\r\n    }\r\n  }\r\n}\r\n","<!-- <app-vertical-menu></app-vertical-menu> -->\r\n<section>\r\n    <div class=\"container-card\">\r\n        <app-products-list class=\"container-cards\"  (editar)=\" editProduct($event)\"></app-products-list>\r\n    </div>\r\n    <div class=\"container-add\">\r\n        <div class=\"container-form\" [style.background]=\"editProp==true? '#FC9631':'#C1AA98'\">\r\n            <form action=\"\" [formGroup]=\"form\" (ngSubmit)=\"addProduct()\">\r\n                <div *ngIf=\"editProp==false\">\r\n                    <h3>Agregar Producto</h3>\r\n                </div>\r\n                <div *ngIf=\"editProp==true\">\r\n                    <h3>Editar Producto</h3>\r\n                </div>\r\n                <div class=\"input_text\">\r\n                    <h4>Nombre del Producto</h4><input type=\"text\" formControlName=\"name\">\r\n                    <div *ngIf=\"confirmation && form.controls.name.errors\" class=\"error\">\r\n                        <p>Debe llenar el nombre</p>\r\n                    </div>\r\n                    <h4>Precio en soles</h4><input type=\"number\" formControlName=\"price\">\r\n                    <div *ngIf=\"confirmation && form.controls.price.errors\" class=\"error\">\r\n                        <p>Debe llenar el precio</p>\r\n                    </div>\r\n                    <h4>Imagen del Producto</h4>\r\n                    <div class=\"div_file\"><input type=\"file\" formControlName=\"image\"></div>\r\n                    <h4>Tipo</h4>\r\n                    <select id=\"type\" formControlName=\"type\">\r\n                        <option value=\"breakfast\">Desayuno</option>\r\n                        <option value=\"hamburguer\">Hamburguesa</option>\r\n                        <option value=\"accompaniment\">Acompañamiento</option>\r\n                        <option value=\"drink\" selected>Para tomar</option>\r\n                    </select>\r\n                    <div *ngIf=\"confirmation && form.controls.type.errors\" class=\"error\">\r\n                        <p>Debe llenar el precio</p>\r\n                    </div>\r\n                    <h4>Fecha</h4><input type=\"date\" formControlName=\"dateEntry\">\r\n                    <div *ngIf=\"confirmation && form.controls.dateEntry.errors\" class=\"error\">\r\n                        <p>Debe llenar la fecha en la que agrego el producto</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"buttons\" *ngIf=\"editProp==false,else viewBtnEdit\">\r\n                    <button class=\"add-product\" type=\"submit\" >Agregar Producto</button>\r\n                    <button class=\"cancel-product\" type=\"button\" (click)=\"form.reset()\"\r\n                        (click)=\"confirmation=false\">Limpiar</button>\r\n                </div>\r\n                <ng-template class=\"buttons\" #viewBtnEdit>\r\n                    <button class=\"add-product\" type=\"button\" (click)=\"saveEdition()\" >Guardar edición</button>\r\n                    <button class=\"cancel-product\" type=\"button\" \r\n                    (click)=\"confirmation=false\"\r\n                    (click)=\"form.reset()\" (click)=\"editProp=false\">Cancelar</button>\r\n                </ng-template>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-view-staff',\r\n  templateUrl: './view-staff.component.html',\r\n  styleUrls: ['./view-staff.component.scss']\r\n})\r\nexport class ViewStaffComponent implements OnInit {\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n"," <div class=\"container-staff-section\">\r\n    <div class=\"container-staff-list-component\">\r\n      <app-add-new-user></app-add-new-user>\r\n      <app-staff-list class=\"staff-list-component\"></app-staff-list>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-view-orders',\r\n  templateUrl: './view-orders.component.html',\r\n  styleUrls: ['./view-orders.component.scss']\r\n})\r\nexport class ViewOrdersComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n    <section class=\"container-products\">\r\n        <div class=\"menu\">\r\n            <app-products-list class=\"products\"></app-products-list>\r\n        </div>\r\n    </section>\r\n    <aside>\r\n      <app-order-send></app-order-send>\r\n    </aside>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-view-states',\r\n  templateUrl: './view-states.component.html',\r\n  styleUrls: ['./view-states.component.scss']\r\n})\r\nexport class ViewStatesComponent implements OnInit {\r\n\r\n  statusPending: string = 'pending';\r\n  statusDelivering: string = 'delivering';\r\n  statusDelivered: string = 'delivered';\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-order-status\">\r\n  <div class=\"order-status\">\r\n      <div class=\"order-pending\">\r\n          <div class=\"title\">\r\n              <i class=\"fas fa-hourglass-half\"></i>\r\n              <p>Pendiente</p>\r\n          </div>\r\n          <app-order-list [statusOrder]=\"statusPending\"></app-order-list>\r\n      </div>\r\n      <div class=\"order-cooking\">\r\n          <div class=\"title\">\r\n              <i class=\"fas fa-mug-hot\"></i>\r\n              <p>Delivering</p>\r\n          </div>\r\n          <app-order-list [statusOrder]=\"statusDelivering\"></app-order-list>\r\n      </div>\r\n      <div class=\"order-ready\">\r\n          <div class=\"title\">\r\n              <i class=\"far fa-check-circle\"></i>\r\n              <p>Delivered</p>\r\n          </div>\r\n          <app-order-list [statusOrder]=\"statusDelivered\"></app-order-list>\r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-waiter',\r\n  templateUrl: './waiter.component.html',\r\n  styleUrls: ['../admin/admin.component.scss']\r\n})\r\n\r\nexport class WaiterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"main-container\">\r\n    <div class=\"container-admin-options\">\r\n      <div class=\"admin-options\">\r\n        <div class=\"option\">\r\n          <a [routerLink]=\"['/mesero/orders']\" routerLinkActive=\"active\">\r\n            <i class=\"fas fa-users\"></i>\r\n            <h2>Tomar orden</h2>\r\n          </a>\r\n        </div>\r\n        <div class=\"option\">\r\n          <a [routerLink]=\"['/mesero/states']\" routerLinkActive=\"active\">\r\n            <i class=\"fas fa-clipboard-list\"></i>\r\n            <h2>Pedidos</h2>\r\n          </a>\r\n        </div>\r\n      </div>\r\n  \r\n    </div>\r\n  \r\n    <router-outlet></router-outlet>\r\n  \r\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl:'http://ec2-13-58-43-131.us-east-2.compute.amazonaws.com/',\r\n  // apiUrl:'http://localhost:3000/',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}